/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.47
 * Generated at: 2025-10-11 11:47:20 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class support_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("/footer.jsp", Long.valueOf(1760181392452L));
    _jspx_dependants.put("/header.jsp", Long.valueOf(1760181392452L));
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fchoose;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fnobody;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fotherwise;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fif_0026_005ftest;

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005fc_005fchoose = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fnobody = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fc_005fotherwise = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fc_005fif_0026_005ftest = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005fc_005fchoose.release();
    _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest.release();
    _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fnobody.release();
    _005fjspx_005ftagPool_005fc_005fotherwise.release();
    _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html lang=\"vi\">\r\n");
      out.write("<head>\r\n");
      out.write("    <meta charset=\"UTF-8\">\r\n");
      out.write("    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n");
      out.write("    <title>Công ty CP Chế tạo máy Hoà Lạc - Chuyên cung cấp máy phát điện chính hãng</title>\r\n");
      out.write("    <link href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css\" rel=\"stylesheet\">\r\n");
      out.write("    <link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css\" rel=\"stylesheet\">\r\n");
      out.write("    <link href=\"https://fonts.googleapis.com/css2?family=Roboto:wght@300;400;500;700&display=swap\" rel=\"stylesheet\">\r\n");
      out.write("    <link rel=\"stylesheet\" href=\"css/styles.css\"/>\r\n");
      out.write("    <style>\r\n");
      out.write("        :root { --primary-red:#dc3545; --text-dark:#343a40; }\r\n");
      out.write("        .top-header { background: var(--primary-red); color:#ffffff; padding:8px 0; font-size:14px; }\r\n");
      out.write("        .header-text { font-weight:600; text-transform:uppercase; }\r\n");
      out.write("        .contact-info { margin-right:20px; }\r\n");
      out.write("\r\n");
      out.write("        /* Navbar tweaks */\r\n");
      out.write("        .navbar { box-shadow:0 2px 10px rgba(0,0,0,0.06); }\r\n");
      out.write("        .navbar .nav-link { color: var(--text-dark); font-weight:500; text-transform:uppercase; }\r\n");
      out.write("        .navbar .nav-link:hover, .navbar .nav-link.active { color: var(--primary-red); }\r\n");
      out.write("\r\n");
      out.write("        /* Search */\r\n");
      out.write("        .search-container { position:relative; margin:0 20px; }\r\n");
      out.write("        .search-input { width:300px; max-width:42vw; padding:12px 45px 12px 15px; border:1px solid #dee2e6; border-radius:25px; font-size:14px; }\r\n");
      out.write("        .search-icon { position:absolute; right:15px; top:50%; transform:translateY(-50%); color:#6c757d; }\r\n");
      out.write("        .phone-number { color:var(--primary-red); font-weight:600; }\r\n");
      out.write("\r\n");
      out.write("        /* Support header */\r\n");
      out.write("        .support-header { background:#ffffff; border:1px solid #eee; border-radius:12px; padding:14px 16px; box-shadow:0 4px 16px rgba(0,0,0,0.05); }\r\n");
      out.write("        .support-title { margin:0; color:var(--text-dark); font-weight:700; letter-spacing:.2px; }\r\n");
      out.write("        .create-request-link { color:var(--primary-red); text-decoration:none; font-weight:500; }\r\n");
      out.write("        .create-request-link:hover { text-decoration:underline; }\r\n");
      out.write("\r\n");
      out.write("        /* Table style */\r\n");
      out.write("        .support-table thead th { background:#f8f9fa; color:#495057; font-weight:600; border-bottom:2px solid #e9ecef; }\r\n");
      out.write("        .support-table tbody tr:hover { background:#fffafa; }\r\n");
      out.write("\r\n");
      out.write("        /* Pagination */\r\n");
      out.write("        .custom-pagination .page-link { color:var(--text-dark); border:none; border-radius:8px; margin:0 3px; }\r\n");
      out.write("        .custom-pagination .page-item.active .page-link, .custom-pagination .page-link:hover { background:var(--primary-red); color:#fff; }\r\n");
      out.write("\r\n");
      out.write("        /* Floating icons */\r\n");
      out.write("        .floating-icons { position:fixed; right:18px; bottom:18px; z-index:1030; }\r\n");
      out.write("        .floating-icon { width:44px; height:44px; border-radius:50%; display:flex; align-items:center; justify-content:center; background:#ffffff; color:var(--text-dark); box-shadow:0 6px 20px rgba(0,0,0,0.12); margin:8px 0; cursor:pointer; transition:transform .2s ease, box-shadow .2s ease, color .2s ease; }\r\n");
      out.write("        .floating-icon:hover { transform:translateY(-2px); box-shadow:0 8px 24px rgba(0,0,0,0.16); color:var(--primary-red); }\r\n");
      out.write("\r\n");
      out.write("        /* Modal header */\r\n");
      out.write("        .modal-header { background:#f8f9fa; }\r\n");
      out.write("        .btn-success { background:#28a745; border-color:#28a745; }\r\n");
      out.write("        .btn-danger { background:#dc3545; border-color:#dc3545; }\r\n");
      out.write("        \r\n");
      out.write("        /* Khung cho các trường thông tin */\r\n");
      out.write("        .form-control-plaintext { \r\n");
      out.write("            background: #ffffff; \r\n");
      out.write("            border: 1px solid #ced4da; \r\n");
      out.write("            border-radius: 6px; \r\n");
      out.write("            padding: 0.75rem; \r\n");
      out.write("            margin-bottom: 0.5rem;\r\n");
      out.write("            min-height: 2.5rem;\r\n");
      out.write("            box-shadow: 0 1px 3px rgba(0,0,0,0.1);\r\n");
      out.write("        }\r\n");
      out.write("        \r\n");
      out.write("        /* Khung cho textarea */\r\n");
      out.write("        .form-control { \r\n");
      out.write("            border: 1px solid #ced4da; \r\n");
      out.write("            border-radius: 6px; \r\n");
      out.write("            box-shadow: 0 1px 3px rgba(0,0,0,0.1);\r\n");
      out.write("        }\r\n");
      out.write("        \r\n");
      out.write("        /* Khung cho modal */\r\n");
      out.write("        .modal-content { \r\n");
      out.write("            border: 2px solid #dee2e6; \r\n");
      out.write("            box-shadow: 0 8px 32px rgba(0,0,0,0.1); \r\n");
      out.write("        }\r\n");
      out.write("        \r\n");
      out.write("        /* Padding cho modal body */\r\n");
      out.write("        .modal-body { \r\n");
      out.write("            padding: 2rem; \r\n");
      out.write("        }\r\n");
      out.write("        \r\n");
      out.write("        /* Styling cho labels */\r\n");
      out.write("        .modal-body label { \r\n");
      out.write("            font-weight: 600; \r\n");
      out.write("            color: #495057; \r\n");
      out.write("            margin-bottom: 0.5rem; \r\n");
      out.write("        }\r\n");
      out.write("        \r\n");
      out.write("        /* Focus state */\r\n");
      out.write("        .form-control:focus { \r\n");
      out.write("            border-color: #80bdff; \r\n");
      out.write("            box-shadow: 0 0 0 0.2rem rgba(0,123,255,.25); \r\n");
      out.write("        }\r\n");
      out.write("    </style>\r\n");
      out.write("    </head>\r\n");
      out.write("    <body>\r\n");
      out.write("    <!-- Top Header -->\r\n");
      out.write("    ");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<style>\r\n");
      out.write("    .top-header { background: #dc3545; color: #ffffff; padding: 8px 0; font-size: 14px; }\r\n");
      out.write("    .header-text { font-weight: 600; text-transform: uppercase; }\r\n");
      out.write("    .contact-info { margin-right: 20px; }\r\n");
      out.write("    .header-navbar { background: #ffffff; box-shadow: 0 2px 10px rgba(0,0,0,0.1); padding: 15px 0; }\r\n");
      out.write("    .menu-navbar { background: #eeeeee; border-top: 1px solid #e5e5e5; border-bottom: 1px solid #e5e5e5; padding: 8px 0; }\r\n");
      out.write("    .logo-container { display:flex; align-items:center; }\r\n");
      out.write("    .logo-icon { width:60px; height:60px; border-radius:50%; margin-right:15px; overflow:hidden; }\r\n");
      out.write("    .logo-icon img { width:100%; height:100%; object-fit:cover; }\r\n");
      out.write("    .logo-text { color:#343a40; font-size:16px; font-weight:600; line-height:1.2; }\r\n");
      out.write("    .search-container { position:relative; margin:0 20px; }\r\n");
      out.write("    .search-input { width:300px; padding:12px 45px 12px 15px; border:1px solid #dee2e6; border-radius:25px; font-size:14px; }\r\n");
      out.write("    .search-icon { position:absolute; right:15px; top:50%; transform:translateY(-50%); color:#6c757d; }\r\n");
      out.write("    .contact-info-nav { display:flex; align-items:center; gap:20px; }\r\n");
      out.write("    .phone-number { color:#dc3545; font-weight:600; font-size:16px; }\r\n");
      out.write("    .nav-icons { display:flex; gap:15px; }\r\n");
      out.write("    .nav-icons i { font-size:20px; color:#343a40; cursor:pointer; }\r\n");
      out.write("    .nav-icons a { color: inherit; text-decoration: none; transition: color 0.3s ease; }\r\n");
      out.write("    .nav-icons a:hover { color: #dc3545; }\r\n");
      out.write("    .navbar-nav .nav-link { color:#343a40 !important; font-weight:500; margin:0 8px; padding:8px 12px !important; text-transform:uppercase; font-size:14px; }\r\n");
      out.write("    .navbar-nav .nav-link:hover { color:#dc3545 !important; }\r\n");
      out.write("    .navbar-nav .nav-link.active { color:#dc3545 !important; font-weight:700; }\r\n");
      out.write("</style>\r\n");
      out.write("\r\n");
      out.write("<div class=\"top-header\" data-logged-in=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${sessionScope.isLoggedIn eq true}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write("\">\r\n");
      out.write("    <div class=\"container\">\r\n");
      out.write("        <div class=\"row align-items-center\">\r\n");
      out.write("            <div class=\"col-md-6\"><span class=\"header-text\">MÁY PHÁT ĐIỆN CÔNG NGHIỆP</span></div>\r\n");
      out.write("            <div class=\"col-md-6 text-end\">\r\n");
      out.write("                <span class=\"contact-info\"><i class=\"fas fa-envelope\"></i> Mayphatdienhoalac@gmail.com</span>\r\n");
      out.write("                <span class=\"contact-info\"><i class=\"fas fa-clock\"></i> 08:00 - 17:00</span>\r\n");
      out.write("            </div>\r\n");
      out.write("        </div>\r\n");
      out.write("    </div>\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("<nav class=\"navbar header-navbar navbar-expand-lg navbar-light bg-white\" aria-label=\"Thanh điều hướng logo, tìm kiếm và tài khoản\">\r\n");
      out.write("    <div class=\"container\">\r\n");
      out.write("        <a class=\"navbar-brand\" href=\"index.jsp\">\r\n");
      out.write("            <div class=\"logo-container\">\r\n");
      out.write("                <div class=\"logo-icon\">\r\n");
      out.write("                    <img src=\"images/logo.png\" alt=\"Logo Hoà Lạc\" onerror=\"this.style.display='none'; this.nextElementSibling.style.display='flex';\">\r\n");
      out.write("                    <div style=\"display:none; width:100%; height:100%; background:#dc3545; border-radius:50%; align-items:center; justify-content:center; color:white; font-size:20px;\">★</div>\r\n");
      out.write("                </div>\r\n");
      out.write("                <div class=\"logo-text\"><strong>HOÀ LẠC ELECTRIC INDUSTRIAL GENERATOR</strong></div>\r\n");
      out.write("            </div>\r\n");
      out.write("        </a>\r\n");
      out.write("        <div class=\"search-container\" role=\"search\">\r\n");
      out.write("            <input type=\"text\" class=\"search-input\" placeholder=\"Tìm kiếm...\">\r\n");
      out.write("            <i class=\"fas fa-search search-icon\"></i>\r\n");
      out.write("        </div>\r\n");
      out.write("        <div class=\"contact-info-nav\">\r\n");
      out.write("            <div class=\"phone-number\"><i class=\"fas fa-phone\"></i> 0989.888.999</div>\r\n");
      out.write("            <div class=\"nav-icons\">\r\n");
      out.write("                ");
      if (_jspx_meth_c_005fchoose_005f0(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("                <i class=\"fas fa-shopping-bag\"></i>\r\n");
      out.write("            </div>\r\n");
      out.write("        </div>\r\n");
      out.write("    </div>\r\n");
      out.write("</nav>\r\n");
      out.write("\r\n");
      out.write("<nav class=\"menu-navbar\" aria-label=\"Thanh menu chính\">\r\n");
      out.write("    <div class=\"container\">\r\n");
      out.write("        <ul class=\"navbar-nav flex-row justify-content-center w-100\">\r\n");
      out.write("            <li class=\"nav-item\"><a class=\"nav-link\" href=\"index.jsp\" id=\"nav-home\">TRANG CHỦ</a></li>\r\n");
      out.write("            <li class=\"nav-item\"><a class=\"nav-link\" href=\"about.jsp\" id=\"nav-about\">GIỚI THIỆU</a></li>\r\n");
      out.write("            <li class=\"nav-item\"><a class=\"nav-link\" href=\"#products\">MÁY PHÁT ĐIỆN</a></li>\r\n");
      out.write("            <li class=\"nav-item\"><a class=\"nav-link\" href=\"#services\">DỊCH VỤ</a></li>\r\n");
      out.write("            <li class=\"nav-item\"><a class=\"nav-link\" href=\"#projects\">DỰ ÁN</a></li>\r\n");
      out.write("            <li class=\"nav-item\"><a class=\"nav-link\" href=\"#guide\">HƯỚNG DẪN</a></li>\r\n");
      out.write("            <li class=\"nav-item\"><a class=\"nav-link\" href=\"#news\">TIN TỨC</a></li>\r\n");
      out.write("            <li class=\"nav-item\"><a class=\"nav-link\" href=\"#contact\">LIÊN HỆ</a></li>\r\n");
      out.write("            ");
      if (_jspx_meth_c_005fif_005f0(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("        </ul>\r\n");
      out.write("    </div>\r\n");
      out.write("</nav>\r\n");
      out.write("\r\n");
      out.write("<script>\r\n");
      out.write("// Auto-set active menu item based on current page\r\n");
      out.write("document.addEventListener('DOMContentLoaded', function() {\r\n");
      out.write("    const currentPage = window.location.pathname.split('/').pop();\r\n");
      out.write("    const navLinks = document.querySelectorAll('.navbar-nav .nav-link');\r\n");
      out.write("    \r\n");
      out.write("    navLinks.forEach(link => {\r\n");
      out.write("        link.classList.remove('active');\r\n");
      out.write("        const href = link.getAttribute('href');\r\n");
      out.write("        \r\n");
      out.write("        if (href === 'index.jsp' && (currentPage === 'index.jsp' || currentPage === '')) {\r\n");
      out.write("            link.classList.add('active');\r\n");
      out.write("        } else if (href === 'about.jsp' && currentPage === 'about.jsp') {\r\n");
      out.write("            link.classList.add('active');\r\n");
      out.write("        }\r\n");
      out.write("    });\r\n");
      out.write("});\r\n");
      out.write("\r\n");
      out.write("// Note: auto-logout on tab close was removed to avoid logging out on refresh\r\n");
      out.write("</script>");
      out.write("\r\n");
      out.write("    \r\n");
      out.write("    \r\n");
      out.write("\r\n");
      out.write("    \r\n");
      out.write("    \r\n");
      out.write("\r\n");
      out.write("    <div class=\"container mt-4\">\r\n");
      out.write("    <div class=\"support-header mb-3 d-flex justify-content-between align-items-center\">\r\n");
      out.write("        <div>\r\n");
      out.write("            <h4 class=\"support-title\">Yêu cầu hỗ trợ</h4>\r\n");
      out.write("            <a href=\"#\" class=\"create-request-link\" data-bs-toggle=\"modal\" data-bs-target=\"#supportModal\">Tạo yêu cầu mới +</a>\r\n");
      out.write("        </div>\r\n");
      out.write("        <div class=\"support-search\">\r\n");
      out.write("            <input type=\"text\" class=\"form-control\" placeholder=\"Tìm kiếm...\">\r\n");
      out.write("        </div>\r\n");
      out.write("    </div>\r\n");
      out.write("    <div class=\"table-responsive\">\r\n");
      out.write("        <table class=\"table support-table align-middle\">\r\n");
      out.write("            <thead>\r\n");
      out.write("                <tr>\r\n");
      out.write("                    <th>ID</th>\r\n");
      out.write("                    <th>Loại yêu cầu</th>\r\n");
      out.write("                    <th>Chi tiết vấn đề</th>\r\n");
      out.write("                    <th>Ngày tạo</th>\r\n");
      out.write("                    <th>Trạng thái</th>\r\n");
      out.write("                    <th>Thao tác</th>\r\n");
      out.write("                </tr>\r\n");
      out.write("            </thead>\r\n");
      out.write("            <tbody id=\"supportRows\"></tbody>\r\n");
      out.write("        </table>\r\n");
      out.write("    </div>\r\n");
      out.write("    <div class=\"d-flex justify-content-end mt-2\">\r\n");
      out.write("        <nav>\r\n");
      out.write("            <ul class=\"pagination custom-pagination mb-0\">\r\n");
      out.write("                <li class=\"page-item\"><a class=\"page-link\" href=\"#\">Trước</a></li>\r\n");
      out.write("                <li class=\"page-item active\"><a class=\"page-link\" href=\"#\">1</a></li>\r\n");
      out.write("                <li class=\"page-item\"><a class=\"page-link\" href=\"#\">Tiếp</a></li>\r\n");
      out.write("            </ul>\r\n");
      out.write("        </nav>\r\n");
      out.write("    </div>\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("    <!-- Modal Yêu cầu hỗ trợ -->\r\n");
      out.write("<div class=\"modal fade\" id=\"supportModal\" tabindex=\"-1\" aria-labelledby=\"supportModalLabel\" aria-hidden=\"true\">\r\n");
      out.write("  <div class=\"modal-dialog\">\r\n");
      out.write("    <div class=\"modal-content\" style=\"border-radius:30px;\">\r\n");
      out.write("      <div class=\"modal-header\">\r\n");
      out.write("        <h5 class=\"modal-title\" id=\"supportModalLabel\">Yêu cầu hỗ trợ</h5>\r\n");
      out.write("        <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Đóng\"></button>\r\n");
      out.write("      </div>\r\n");
      out.write("      <div class=\"modal-body\">\r\n");
      out.write("        <form id=\"supportForm\">\r\n");
      out.write("          <div class=\"row mb-2\">\r\n");
      out.write("            <div class=\"col-6\">\r\n");
      out.write("              <label>Họ tên</label>\r\n");
      out.write("              <input type=\"text\" class=\"form-control\" id=\"displayName\" readonly>\r\n");
      out.write("            </div>\r\n");
      out.write("            <div class=\"col-6\">\r\n");
      out.write("              <label>Email</label>\r\n");
      out.write("              <input type=\"email\" class=\"form-control\" id=\"email\" readonly>\r\n");
      out.write("            </div>\r\n");
      out.write("          </div>\r\n");
      out.write("          <div class=\"row mb-2\">\r\n");
      out.write("            <div class=\"col-12\">\r\n");
      out.write("              <label>Hợp đồng</label>\r\n");
      out.write("              <select class=\"form-control\" id=\"contractSelect\">\r\n");
      out.write("                <option value=\"\">-- Chọn hợp đồng --</option>\r\n");
      out.write("              </select>\r\n");
      out.write("            </div>\r\n");
      out.write("          </div>\r\n");
      out.write("          <div class=\"row mb-2\">\r\n");
      out.write("            <div class=\"col-12\">\r\n");
      out.write("              <label>Sản phẩm trong hợp đồng</label>\r\n");
      out.write("              <select class=\"form-control\" id=\"contractProductSelect\" disabled>\r\n");
      out.write("                <option value=\"\">-- Chọn sản phẩm --</option>\r\n");
      out.write("              </select>\r\n");
      out.write("            </div>\r\n");
      out.write("          </div>\r\n");
      out.write("          <div class=\"mb-2\">\r\n");
      out.write("            <label>Tiêu đề:</label>\r\n");
      out.write("            <input type=\"text\" class=\"form-control\" id=\"subject\" placeholder=\"Nhập tiêu đề\">\r\n");
      out.write("          </div>\r\n");
      out.write("          <div class=\"mb-2\">\r\n");
      out.write("            <label>Loại yêu cầu :</label>\r\n");
      out.write("            <select class=\"form-control\" id=\"category\">\r\n");
      out.write("                <option value=\"technical\">Kỹ thuật</option>\r\n");
      out.write("                <option value=\"billing\">Thanh toán</option>\r\n");
      out.write("                <option value=\"general\" selected>Chung</option>\r\n");
      out.write("                <option value=\"complaint\">Khiếu nại</option>\r\n");
      out.write("            </select>\r\n");
      out.write("          </div>\r\n");
      out.write("          <div class=\"mb-2\">\r\n");
      out.write("            <label>Ngày tạo :</label>\r\n");
      out.write("            <input type=\"date\" class=\"form-control\" id=\"createdDate\" readonly>\r\n");
      out.write("            <small class=\"text-muted\" id=\"createdDateText\"></small>\r\n");
      out.write("          </div>\r\n");
      out.write("          <div class=\"mb-2\">\r\n");
      out.write("            <label>Chi tiết vấn đề :</label>\r\n");
      out.write("            <textarea class=\"form-control\" id=\"description\"></textarea>\r\n");
      out.write("          </div>\r\n");
      out.write("          <div class=\"text-end mt-3\">\r\n");
      out.write("            <button type=\"submit\" class=\"btn btn-success\" id=\"submitBtn\">Xác nhận</button>\r\n");
      out.write("            <button type=\"button\" class=\"btn btn-danger\" data-bs-dismiss=\"modal\">Hủy bỏ</button>\r\n");
      out.write("          </div>\r\n");
      out.write("        </form>\r\n");
      out.write("      </div>\r\n");
      out.write("    </div>\r\n");
      out.write("  </div>\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("<!-- Modal xem chi tiết yêu cầu -->\r\n");
      out.write("<div class=\"modal fade\" id=\"viewModal\" tabindex=\"-1\" aria-hidden=\"true\">\r\n");
      out.write("  <div class=\"modal-dialog modal-lg\">\r\n");
      out.write("    <div class=\"modal-content\" style=\"border-radius:20px;\">\r\n");
      out.write("      <div class=\"modal-header\">\r\n");
      out.write("        <h5 class=\"modal-title\">Chi tiết yêu cầu hỗ trợ</h5>\r\n");
      out.write("        <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Đóng\"></button>\r\n");
      out.write("      </div>\r\n");
      out.write("      <div class=\"modal-body\">\r\n");
      out.write("        <div class=\"row g-3\">\r\n");
      out.write("          <div class=\"col-md-6\"><label>Mã ticket</label><div id=\"v_ticket\" class=\"form-control-plaintext\"></div></div>\r\n");
      out.write("          <div class=\"col-md-6\"><label>Trạng thái</label><div id=\"v_status\" class=\"form-control-plaintext\"></div></div>\r\n");
      out.write("          <div class=\"col-md-6\"><label>Loại yêu cầu</label>\r\n");
      out.write("            <select id=\"v_category_inp\" class=\"form-control\" disabled>\r\n");
      out.write("              <option value=\"technical\">Kỹ thuật</option>\r\n");
      out.write("              <option value=\"billing\">Thanh toán</option>\r\n");
      out.write("              <option value=\"general\">Chung</option>\r\n");
      out.write("              <option value=\"complaint\">Khiếu nại</option>\r\n");
      out.write("            </select>\r\n");
      out.write("          </div>\r\n");
      out.write("          <div class=\"col-md-6\">\r\n");
      out.write("            <label>Hợp đồng</label>\r\n");
      out.write("            <select id=\"v_contract_select\" class=\"form-control\" disabled>\r\n");
      out.write("              <option value=\"\">-- Chọn hợp đồng --</option>\r\n");
      out.write("            </select>\r\n");
      out.write("          </div>\r\n");
      out.write("          <div class=\"col-md-6\"><label>Ưu tiên</label>\r\n");
      out.write("            <select id=\"v_priority_inp\" class=\"form-control\" disabled>\r\n");
      out.write("              <option value=\"\">--</option>\r\n");
      out.write("              <option value=\"urgent\">Cao</option>\r\n");
      out.write("              <option value=\"high\">Trung bình</option>\r\n");
      out.write("              <option value=\"medium\">Thường</option>\r\n");
      out.write("              <option value=\"low\">Thấp</option>\r\n");
      out.write("            </select>\r\n");
      out.write("          </div>\r\n");
      out.write("          <div class=\"col-md-6\">\r\n");
      out.write("            <label>Sản phẩm trong hợp đồng</label>\r\n");
      out.write("            <select id=\"v_product_select\" class=\"form-control\" disabled>\r\n");
      out.write("              <option value=\"\">-- Chọn sản phẩm --</option>\r\n");
      out.write("            </select>\r\n");
      out.write("          </div>\r\n");
      out.write("          <div class=\"col-12\"><label>Tiêu đề</label><input id=\"v_subject_inp\" class=\"form-control\" disabled/></div>\r\n");
      out.write("          <div class=\"col-12\"><label>Chi tiết vấn đề</label><textarea id=\"v_description_inp\" class=\"form-control\" rows=\"4\" disabled></textarea></div>\r\n");
      out.write("          <div class=\"col-md-6\"><label>Ngày tạo</label><div id=\"v_created\" class=\"form-control-plaintext\"></div></div>\r\n");
      out.write("          <div class=\"col-md-6\"><label>Ngày xử lý xong</label><div id=\"v_resolved\" class=\"form-control-plaintext\"></div></div>\r\n");
      out.write("          <div class=\"col-md-6\"><label>Người được phân công</label><div id=\"v_assigned_to\" class=\"form-control-plaintext\"></div></div>\r\n");
      out.write("          <div class=\"col-md-6\"><label>Lịch sử xử lý</label><div id=\"v_history\" class=\"form-control-plaintext\"></div></div>\r\n");
      out.write("          <div class=\"col-12\"><label>Giải pháp</label><textarea id=\"v_resolution\" class=\"form-control\" rows=\"3\" readonly></textarea></div>\r\n");
      out.write("          <div class=\"col-12 d-flex align-items-center justify-content-between\">\r\n");
      out.write("            <div class=\"form-check\">\r\n");
      out.write("              <input class=\"form-check-input\" type=\"checkbox\" id=\"v_enable_edit\">\r\n");
      out.write("              <label class=\"form-check-label\" for=\"v_enable_edit\">Chỉnh sửa </label>\r\n");
      out.write("            </div>\r\n");
      out.write("            <button type=\"button\" id=\"v_save_btn\" class=\"btn btn-success\" disabled>Lưu thành yêu cầu mới</button>\r\n");
      out.write("          </div>\r\n");
      out.write("        </div>\r\n");
      out.write("      </div>\r\n");
      out.write("      <div class=\"modal-footer\">\r\n");
      out.write("        <button type=\"button\" class=\"btn btn-secondary\" data-bs-dismiss=\"modal\">Đóng</button>\r\n");
      out.write("      </div>\r\n");
      out.write("    </div>\r\n");
      out.write("  </div>\r\n");
      out.write("</div>\r\n");
      out.write("<script>\r\n");
      out.write("  // Tự động set ngày hiện tại cho trường \"Ngày tạo\"\r\n");
      out.write("  document.addEventListener('DOMContentLoaded', function() {\r\n");
      out.write("    var today = new Date().toISOString().split('T')[0];\r\n");
      out.write("    var createdInput = document.getElementById('createdDate');\r\n");
      out.write("    var createdText = document.getElementById('createdDateText');\r\n");
      out.write("    if (createdInput) createdInput.value = today;\r\n");
      out.write("    try {\r\n");
      out.write("      var d = new Date();\r\n");
      out.write("      var dd = String(d.getDate()).padStart(2,'0');\r\n");
      out.write("      var mm = String(d.getMonth()+1).padStart(2,'0');\r\n");
      out.write("      var yyyy = d.getFullYear();\r\n");
      out.write("      if (createdText) createdText.textContent = dd + '/' + mm + '/' + yyyy;\r\n");
      out.write("    } catch(e) {}\r\n");
      out.write("    \r\n");
      out.write("    const ctx = '");
      out.print(request.getContextPath());
      out.write("';\r\n");
      out.write("    // Prefill name/email theo session và nạp danh sách hợp đồng/sản phẩm\r\n");
      out.write("    try {\r\n");
      out.write("      const sessionEmail = '");
      out.print( String.valueOf(session.getAttribute("email")) );
      out.write("';\r\n");
      out.write("      const sessionUsername = '");
      out.print( String.valueOf(session.getAttribute("username")) );
      out.write("';\r\n");
      out.write("      const sessionFullName = '");
      out.print( String.valueOf(session.getAttribute("fullName")) );
      out.write("';\r\n");
      out.write("      const sessionCustomerId = '");
      out.print( String.valueOf(session.getAttribute("customerId")) );
      out.write("';\r\n");
      out.write("      const emailInp = document.getElementById('email');\r\n");
      out.write("      const nameInp = document.getElementById('displayName');\r\n");
      out.write("      if (emailInp && sessionEmail && sessionEmail !== 'null') {\r\n");
      out.write("        emailInp.value = sessionEmail;\r\n");
      out.write("      }\r\n");
      out.write("      if (nameInp) {\r\n");
      out.write("        const name = (sessionFullName && sessionFullName !== 'null') ? sessionFullName : (sessionUsername && sessionUsername !== 'null' ? sessionUsername : '');\r\n");
      out.write("        nameInp.value = name;\r\n");
      out.write("      }\r\n");
      out.write("\r\n");
      out.write("      // Load contracts (already filtered by backend based on session customerId)\r\n");
      out.write("      const contractSelect = document.getElementById('contractSelect');\r\n");
      out.write("      const productSelect = document.getElementById('contractProductSelect');\r\n");
      out.write("      const ctx = '");
      out.print(request.getContextPath());
      out.write("';\r\n");
      out.write("      fetch(ctx + '/api/contracts', { headers: { 'Accept': 'application/json' } })\r\n");
      out.write("        .then(r => r.json())\r\n");
      out.write("        .then(j => {\r\n");
      out.write("          if (!j || !j.success) return;\r\n");
      out.write("          const list = Array.isArray(j.data) ? j.data : [];\r\n");
      out.write("          list.forEach(it => {\r\n");
      out.write("            const opt = document.createElement('option');\r\n");
      out.write("            opt.value = it.id;\r\n");
      out.write("            opt.textContent = (it.contractNumber ? (it.contractNumber + ' - ') : '') + (it.title || ('HĐ #' + it.id));\r\n");
      out.write("            contractSelect.appendChild(opt);\r\n");
      out.write("          });\r\n");
      out.write("        });\r\n");
      out.write("\r\n");
      out.write("      contractSelect.addEventListener('change', function(){\r\n");
      out.write("        const id = this.value;\r\n");
      out.write("        productSelect.innerHTML = '<option value=\"\">-- Chọn sản phẩm --</option>';\r\n");
      out.write("        productSelect.disabled = !id;\r\n");
      out.write("        if (!id) return;\r\n");
      out.write("        fetch(ctx + '/api/contract-items?contractId=' + encodeURIComponent(id), { headers: { 'Accept': 'application/json' } })\r\n");
      out.write("          .then(r => r.json())\r\n");
      out.write("          .then(j => {\r\n");
      out.write("            if (!j || !j.success) return;\r\n");
      out.write("            const arr = Array.isArray(j.data) ? j.data : [];\r\n");
      out.write("            arr.forEach(item => {\r\n");
      out.write("              const opt = document.createElement('option');\r\n");
      out.write("              opt.value = item.productId;\r\n");
      out.write("              const name = item.description ? item.description : ('Sản phẩm #' + item.productId);\r\n");
      out.write("              opt.textContent = name;\r\n");
      out.write("              opt.dataset.quantity = item.quantity != null ? String(item.quantity) : '';\r\n");
      out.write("              opt.dataset.unitPrice = item.unitPrice != null ? String(item.unitPrice) : '';\r\n");
      out.write("              productSelect.appendChild(opt);\r\n");
      out.write("            });\r\n");
      out.write("          });\r\n");
      out.write("      });\r\n");
      out.write("    } catch (e) {}\r\n");
      out.write("    const tbody = document.getElementById('supportRows');\r\n");
      out.write("    const pagerContainer = document.querySelector('.pagination.custom-pagination');\r\n");
      out.write("    let allItems = [];\r\n");
      out.write("    let filteredItems = [];\r\n");
      out.write("    let currentPage = 1;\r\n");
      out.write("    const pageSize = 9;\r\n");
      out.write("    let cancelledItems = new Set(); // Lưu trữ các ID đã hủy trên frontend\r\n");
      out.write("    let searchTerm = ''; // Lưu từ khóa tìm kiếm\r\n");
      out.write("    function formatDate(it){\r\n");
      out.write("      if (it.createdDate && typeof it.createdDate === 'string' && it.createdDate.includes('-')) {\r\n");
      out.write("        var parts = it.createdDate.split('-');\r\n");
      out.write("        if (parts.length === 3) return parts[2] + '/' + parts[1] + '/' + parts[0];\r\n");
      out.write("      }\r\n");
      out.write("      if (it.createdAt) {\r\n");
      out.write("        try {\r\n");
      out.write("          return new Intl.DateTimeFormat('vi-VN', { timeZone: 'Asia/Ho_Chi_Minh' }).format(new Date(it.createdAt));\r\n");
      out.write("        } catch (e) {}\r\n");
      out.write("      }\r\n");
      out.write("      return '';\r\n");
      out.write("    }\r\n");
      out.write("    \r\n");
      out.write("    function getStatusText(status) {\r\n");
      out.write("      const statusMap = {\r\n");
      out.write("        'pending': 'Chờ xử lý',\r\n");
      out.write("        'open': 'Chờ xử lý',\r\n");
      out.write("        'in_progress': 'Đang xử lý',\r\n");
      out.write("        'resolved': 'Đã giải quyết',\r\n");
      out.write("        'cancelled': 'Đã hủy',\r\n");
      out.write("        'closed': 'Đã đóng'\r\n");
      out.write("      };\r\n");
      out.write("      return statusMap[status] || 'Chờ xử lý';\r\n");
      out.write("    }\r\n");
      out.write("    \r\n");
      out.write("    function getStatusClass(status) {\r\n");
      out.write("      const classMap = {\r\n");
      out.write("        'pending': 'bg-warning',\r\n");
      out.write("        'open': 'bg-warning',\r\n");
      out.write("        'in_progress': 'bg-info',\r\n");
      out.write("        'resolved': 'bg-success',\r\n");
      out.write("        'cancelled': 'bg-danger',\r\n");
      out.write("        'closed': 'bg-secondary'\r\n");
      out.write("      };\r\n");
      out.write("      return classMap[status] || 'bg-warning';\r\n");
      out.write("    }\r\n");
      out.write("    \r\n");
      out.write("    function filterItems() {\r\n");
      out.write("      if (!searchTerm.trim()) {\r\n");
      out.write("        filteredItems = [...allItems];\r\n");
      out.write("      } else {\r\n");
      out.write("        const term = searchTerm.toLowerCase();\r\n");
      out.write("        filteredItems = allItems.filter(function(item) {\r\n");
      out.write("          return (\r\n");
      out.write("            (item.subject && item.subject.toLowerCase().includes(term)) ||\r\n");
      out.write("            (item.description && item.description.toLowerCase().includes(term)) ||\r\n");
      out.write("            (item.category && item.category.toLowerCase().includes(term)) ||\r\n");
      out.write("            (item.ticketNumber && item.ticketNumber.toLowerCase().includes(term))\r\n");
      out.write("          );\r\n");
      out.write("        });\r\n");
      out.write("      }\r\n");
      out.write("    }\r\n");
      out.write("    \r\n");
      out.write("    function rows(items){\r\n");
      out.write("      tbody.innerHTML = '';\r\n");
      out.write("      if(!items || !items.length){\r\n");
      out.write("        tbody.innerHTML = '<tr><td colspan=\"6\" class=\"text-center\">Chưa có yêu cầu nào</td></tr>';\r\n");
      out.write("        return;\r\n");
      out.write("      }\r\n");
      out.write("      items.forEach(function(it, idx){\r\n");
      out.write("        const created = formatDate(it);\r\n");
      out.write("        // Ưu tiên trạng thái đã hủy trên frontend\r\n");
      out.write("        const finalStatus = cancelledItems.has(String(it.id)) ? 'cancelled' : (it.status || 'pending');\r\n");
      out.write("        const status = getStatusText(finalStatus);\r\n");
      out.write("        const statusClass = getStatusClass(finalStatus);\r\n");
      out.write("        const tr = document.createElement('tr');\r\n");
      out.write("        // Chỉ hiển thị nút hủy khi có thể hủy (pending hoặc open)\r\n");
      out.write("        const canCancel = finalStatus === 'pending' || finalStatus === 'open';\r\n");
      out.write("        const cancelButton = canCancel ? '<a href=\"#\" class=\"cancel-link text-danger\" data-id=\"'+ (it.id||'') +'\">Hủy</a>' : '';\r\n");
      out.write("        // Tính số thứ tự theo thời gian tạo (mới nhất = 1)\r\n");
      out.write("        const sequenceNumber = (currentPage - 1) * pageSize + idx + 1;\r\n");
      out.write("        var displayDesc = (it.description||'');\r\n");
      out.write("        try {\r\n");
      out.write("          displayDesc = displayDesc.replace(/\\[Hợp đồng:[^\\]]*\\]\\s*/g, '').replace(/\\[Sản phẩm:[^\\]]*\\]\\s*/g, '').trim();\r\n");
      out.write("        } catch(e) {}\r\n");
      out.write("        tr.innerHTML = '<td>'+ sequenceNumber +'</td><td>'+ (it.category||'') +'</td><td>'+ displayDesc +'</td><td>'+ created +'</td><td><span class=\"badge ' + statusClass + '\">' + status + '</span></td><td><a href=\"#\" class=\"view-link me-2\" data-id=\"'+ (it.id||'') +'\">Xem</a> ' + cancelButton + '</td>';\r\n");
      out.write("        tbody.appendChild(tr);\r\n");
      out.write("      });\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    function renderPagination(totalItems){\r\n");
      out.write("      if(!pagerContainer) return;\r\n");
      out.write("      const totalPages = Math.max(1, Math.ceil(totalItems / pageSize));\r\n");
      out.write("      let html = '';\r\n");
      out.write("      html += '<li class=\"page-item'+(currentPage===1?' disabled':'')+'\"><a class=\"page-link\" href=\"#\" data-page=\"prev\">Trước</a></li>';\r\n");
      out.write("      // show only current page number\r\n");
      out.write("      html += '<li class=\"page-item active\"><a class=\"page-link\" href=\"#\" data-page=\"'+currentPage+'\">'+currentPage+'</a></li>';\r\n");
      out.write("      html += '<li class=\"page-item'+(currentPage===totalPages?' disabled':'')+'\"><a class=\"page-link\" href=\"#\" data-page=\"next\">Tiếp</a></li>';\r\n");
      out.write("      pagerContainer.innerHTML = html;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    function renderPage(page){\r\n");
      out.write("      const total = filteredItems.length;\r\n");
      out.write("      const totalPages = Math.max(1, Math.ceil(total / pageSize));\r\n");
      out.write("      if(page === 'prev') page = Math.max(1, currentPage - 1);\r\n");
      out.write("      if(page === 'next') page = Math.min(totalPages, currentPage + 1);\r\n");
      out.write("      page = Math.min(Math.max(1, parseInt(page||1,10)), totalPages);\r\n");
      out.write("      currentPage = page;\r\n");
      out.write("      const start = (page - 1) * pageSize;\r\n");
      out.write("      const end = start + pageSize;\r\n");
      out.write("      const pageItems = filteredItems.slice(start, end);\r\n");
      out.write("      rows(pageItems);\r\n");
      out.write("      renderPagination(total);\r\n");
      out.write("    }\r\n");
      out.write("    function load(){\r\n");
      out.write("      fetch(ctx + '/api/support-requests?action=list', {headers:{'Accept':'application/json'}})\r\n");
      out.write("        .then(r=>r.json()).then(j=>{ \r\n");
      out.write("          allItems = Array.isArray(j.data)? j.data : []; \r\n");
      out.write("          filterItems();\r\n");
      out.write("          renderPage(1); \r\n");
      out.write("        })\r\n");
      out.write("        .catch(()=>{tbody.innerHTML='<tr><td colspan=\"7\" class=\"text-center text-danger\">Lỗi tải dữ liệu</td></tr>';});\r\n");
      out.write("    }\r\n");
      out.write("    load();\r\n");
      out.write("\r\n");
      out.write("    // Thêm chức năng tìm kiếm\r\n");
      out.write("    const searchInput = document.querySelector('.support-search input');\r\n");
      out.write("    if (searchInput) {\r\n");
      out.write("      searchInput.addEventListener('input', function(e) {\r\n");
      out.write("        searchTerm = e.target.value;\r\n");
      out.write("        filterItems();\r\n");
      out.write("        renderPage(1);\r\n");
      out.write("      });\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    if (pagerContainer) {\r\n");
      out.write("      pagerContainer.addEventListener('click', function(e){\r\n");
      out.write("        const a = e.target.closest('a[data-page]');\r\n");
      out.write("        if(!a) return;\r\n");
      out.write("        e.preventDefault();\r\n");
      out.write("        const p = a.getAttribute('data-page');\r\n");
      out.write("        renderPage(p === 'prev' || p === 'next' ? p : parseInt(p,10));\r\n");
      out.write("      });\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    // Handle submit\r\n");
      out.write("    document.getElementById('supportForm').addEventListener('submit', function(e){\r\n");
      out.write("      e.preventDefault();\r\n");
      out.write("      const form = e.target;\r\n");
      out.write("      const data = new URLSearchParams();\r\n");
      out.write("      const subject = document.getElementById('subject').value || '';\r\n");
      out.write("      const baseDesc = document.getElementById('description').value || '';\r\n");
      out.write("      // Lưu hợp đồng/sản phẩm vào mô tả để hiển thị lại ở chi tiết (danh sách sẽ ẩn các tiền tố này)\r\n");
      out.write("      const cSel = document.getElementById('contractSelect');\r\n");
      out.write("      const pSel = document.getElementById('contractProductSelect');\r\n");
      out.write("      const cHas = cSel && cSel.value;\r\n");
      out.write("      const pHas = pSel && pSel.value;\r\n");
      out.write("      let composed = baseDesc;\r\n");
      out.write("      if (cHas) {\r\n");
      out.write("        const cText = cSel.options[cSel.selectedIndex].textContent;\r\n");
      out.write("        composed = '[Hợp đồng: ' + cText + '] ' + composed;\r\n");
      out.write("      }\r\n");
      out.write("      if (pHas) {\r\n");
      out.write("        const pText = pSel.options[pSel.selectedIndex].textContent;\r\n");
      out.write("        composed = '[Sản phẩm: ' + pText + '] ' + composed;\r\n");
      out.write("      }\r\n");
      out.write("      data.append('subject', subject);\r\n");
      out.write("      data.append('description', composed);\r\n");
      out.write("      data.append('category', document.getElementById('category').value || 'general');\r\n");
      out.write("      // backend tự xác định người dùng theo session; không gửi priority/customer/email\r\n");
      out.write("      fetch(ctx + '/api/support-requests', {\r\n");
      out.write("        method: 'POST',\r\n");
      out.write("        headers: { 'Content-Type': 'application/x-www-form-urlencoded', 'Accept': 'application/json' },\r\n");
      out.write("        body: data.toString()\r\n");
      out.write("      }).then(r=>r.json())\r\n");
      out.write("        .then(j=>{\r\n");
      out.write("          if(j && j.success){\r\n");
      out.write("            form.reset();\r\n");
      out.write("            const modalEl = document.getElementById('supportModal');\r\n");
      out.write("            const modal = bootstrap.Modal.getInstance(modalEl) || new bootstrap.Modal(modalEl);\r\n");
      out.write("            modal.hide();\r\n");
      out.write("            load();\r\n");
      out.write("          } else {\r\n");
      out.write("            alert(j && j.message ? j.message : 'Không thể tạo yêu cầu');\r\n");
      out.write("          }\r\n");
      out.write("        })\r\n");
      out.write("        .catch(()=> alert('Lỗi kết nối máy chủ'));\r\n");
      out.write("    });\r\n");
      out.write("\r\n");
      out.write("    // View detail handler\r\n");
      out.write("    tbody.addEventListener('click', function(e){\r\n");
      out.write("      const viewLink = e.target.closest('a.view-link');\r\n");
      out.write("      const cancelLink = e.target.closest('a.cancel-link');\r\n");
      out.write("      \r\n");
      out.write("      if(viewLink) {\r\n");
      out.write("        e.preventDefault();\r\n");
      out.write("        const id = viewLink.getAttribute('data-id');\r\n");
      out.write("        const it = allItems.find(function(x){ return String(x.id) === String(id); });\r\n");
      out.write("        if(!it) return;\r\n");
      out.write("      document.getElementById('v_ticket').textContent = it.ticketNumber || '';\r\n");
      out.write("      document.getElementById('v_status').textContent = it.status || '';\r\n");
      out.write("      // fill editable inputs\r\n");
      out.write("      var catInp = document.getElementById('v_category_inp');\r\n");
      out.write("      var priInp = document.getElementById('v_priority_inp');\r\n");
      out.write("      var subInp = document.getElementById('v_subject_inp');\r\n");
      out.write("      var desInp = document.getElementById('v_description_inp');\r\n");
      out.write("      var vContract = document.getElementById('v_contract_select');\r\n");
      out.write("      var vProduct = document.getElementById('v_product_select');\r\n");
      out.write("      if (catInp) catInp.value = (it.category||'general');\r\n");
      out.write("      if (priInp) priInp.value = (it.priority ? it.priority : '');\r\n");
      out.write("      if (subInp) subInp.value = (it.subject||'');\r\n");
      out.write("      if (desInp) desInp.value = (it.description||'');\r\n");
      out.write("      const created = formatDate(it);\r\n");
      out.write("      const resolved = (it.resolvedAt ? new Intl.DateTimeFormat('vi-VN', { timeZone: 'Asia/Ho_Chi_Minh' }).format(new Date(it.resolvedAt)) : '');\r\n");
      out.write("      document.getElementById('v_created').textContent = created;\r\n");
      out.write("      document.getElementById('v_resolved').textContent = resolved;\r\n");
      out.write("      \r\n");
      out.write("      // Hiển thị các trường mới\r\n");
      out.write("      document.getElementById('v_assigned_to').textContent = it.assignedTo || 'Chưa phân công';\r\n");
      out.write("      document.getElementById('v_history').textContent = it.history || 'Chưa có lịch sử';\r\n");
      out.write("      document.getElementById('v_resolution').value = it.resolution || '';\r\n");
      out.write("      // Load contracts for view (read-only)\r\n");
      out.write("      try {\r\n");
      out.write("        // reset\r\n");
      out.write("        if (vContract) { vContract.innerHTML = '<option value=\"\">-- Chọn hợp đồng --</option>'; }\r\n");
      out.write("        if (vProduct) { vProduct.innerHTML = '<option value=\"\">-- Chọn sản phẩm --</option>'; vProduct.disabled = true; }\r\n");
      out.write("        fetch(ctx + '/api/contracts', { headers: { 'Accept': 'application/json' } })\r\n");
      out.write("          .then(r=>r.json()).then(function(j){\r\n");
      out.write("            if (!j || !j.success) return;\r\n");
      out.write("            const list = Array.isArray(j.data)? j.data: [];\r\n");
      out.write("            list.forEach(function(c){\r\n");
      out.write("              var opt = document.createElement('option');\r\n");
      out.write("              opt.value = c.id;\r\n");
      out.write("              opt.textContent = (c.contractNumber ? (c.contractNumber + ' - ') : '') + (c.title || ('HĐ #' + c.id));\r\n");
      out.write("              vContract.appendChild(opt);\r\n");
      out.write("            });\r\n");
      out.write("            // Try detect from description pattern [Hợp đồng: ...] [Sản phẩm: ...]\r\n");
      out.write("            var desc = desInp ? desInp.value : '';\r\n");
      out.write("            var contractLabel = (desc.match(/\\[Hợp đồng:([^\\]]+)\\]/) || [])[1];\r\n");
      out.write("            var productLabel = (desc.match(/\\[Sản phẩm:([^\\]]+)\\]/) || [])[1];\r\n");
      out.write("            if (contractLabel) {\r\n");
      out.write("              for (var i=0;i<vContract.options.length;i++) {\r\n");
      out.write("                if (vContract.options[i].textContent.indexOf(contractLabel.trim()) !== -1) {\r\n");
      out.write("                  vContract.selectedIndex = i; break;\r\n");
      out.write("                }\r\n");
      out.write("              }\r\n");
      out.write("              if (vContract.value) {\r\n");
      out.write("                vProduct.disabled = false;\r\n");
      out.write("                fetch(ctx + '/api/contract-items?contractId=' + encodeURIComponent(vContract.value), { headers: { 'Accept': 'application/json' } })\r\n");
      out.write("                  .then(r=>r.json()).then(function(j2){\r\n");
      out.write("                    if (!j2 || !j2.success) return;\r\n");
      out.write("                    (Array.isArray(j2.data)? j2.data: []).forEach(function(item){\r\n");
      out.write("                      var opt = document.createElement('option');\r\n");
      out.write("                      opt.value = item.productId;\r\n");
      out.write("                      var name = item.description ? item.description : ('Sản phẩm #' + item.productId);\r\n");
      out.write("                      opt.textContent = name;\r\n");
      out.write("                      vProduct.appendChild(opt);\r\n");
      out.write("                    });\r\n");
      out.write("                    if (productLabel) {\r\n");
      out.write("                      for (var k=0;k<vProduct.options.length;k++) {\r\n");
      out.write("                        if (vProduct.options[k].textContent.indexOf(productLabel.trim()) !== -1) {\r\n");
      out.write("                          vProduct.selectedIndex = k; break;\r\n");
      out.write("                        }\r\n");
      out.write("                      }\r\n");
      out.write("                    }\r\n");
      out.write("                  });\r\n");
      out.write("              }\r\n");
      out.write("            }\r\n");
      out.write("          });\r\n");
      out.write("      } catch(e) {}\r\n");
      out.write("      const vm = bootstrap.Modal.getOrCreateInstance(document.getElementById('viewModal'));\r\n");
      out.write("      vm.show();\r\n");
      out.write("      // reset edit state\r\n");
      out.write("      const enable = document.getElementById('v_enable_edit');\r\n");
      out.write("      const saveBtn = document.getElementById('v_save_btn');\r\n");
      out.write("      [catInp, priInp, subInp, desInp].forEach(function(el){ if(el){ el.disabled = true; }});\r\n");
      out.write("      if (enable) enable.checked = false;\r\n");
      out.write("      if (saveBtn) saveBtn.disabled = true;\r\n");
      out.write("      \r\n");
      out.write("      // Kiểm tra trạng thái để quyết định có cho phép chỉnh sửa không\r\n");
      out.write("      const finalStatus = cancelledItems.has(String(id)) ? 'cancelled' : (it.status || 'pending');\r\n");
      out.write("      const canEdit = finalStatus === 'pending' || finalStatus === 'open';\r\n");
      out.write("      \r\n");
      out.write("      // Disable checkbox nếu không thể chỉnh sửa\r\n");
      out.write("      if (enable) {\r\n");
      out.write("        enable.disabled = !canEdit;\r\n");
      out.write("        if (!canEdit) {\r\n");
      out.write("          enable.title = 'Yêu cầu đang được thực hiện - không thể chỉnh sửa';\r\n");
      out.write("          enable.parentElement.style.color = '#dc3545';\r\n");
      out.write("          enable.parentElement.innerHTML = '<input class=\"form-check-input\" type=\"checkbox\" id=\"v_enable_edit\" disabled><label class=\"form-check-label\" for=\"v_enable_edit\" style=\"color: #dc3545;\">Chỉnh sửa (Yêu cầu đang được thực hiện)</label>';\r\n");
      out.write("        } else {\r\n");
      out.write("          enable.parentElement.style.color = '';\r\n");
      out.write("        }\r\n");
      out.write("      }\r\n");
      out.write("      \r\n");
      out.write("      // attach handlers\r\n");
      out.write("      if (enable) {\r\n");
      out.write("        enable.onchange = function(){\r\n");
      out.write("          if (!canEdit) {\r\n");
      out.write("            alert('Yêu cầu đang được thực hiện - không thể chỉnh sửa!');\r\n");
      out.write("            enable.checked = false;\r\n");
      out.write("            return;\r\n");
      out.write("          }\r\n");
      out.write("          var on = !!enable.checked;\r\n");
      out.write("         // chỉnh sửa loại yêu cầu, tiêu đề, mô tả\r\n");
      out.write("          [catInp, subInp, desInp].forEach(function(el){ if(el){ el.disabled = !on; }});\r\n");
      out.write("          if (priInp) priInp.disabled = true;\r\n");
      out.write("          if (saveBtn) saveBtn.disabled = !on;\r\n");
      out.write("        };\r\n");
      out.write("      }\r\n");
      out.write("      if (saveBtn) {\r\n");
      out.write("        saveBtn.onclick = function(){\r\n");
      out.write("          const data = new URLSearchParams();\r\n");
      out.write("          data.append('subject', subInp.value || '');\r\n");
      out.write("          data.append('description', desInp.value || '');\r\n");
      out.write("          data.append('category', catInp.value || 'general');\r\n");
      out.write("          data.append('delete_old_id', id); // thêm ID để xóa bản cũ\r\n");
      out.write("          fetch(ctx + '/api/support-requests', {\r\n");
      out.write("            method: 'POST',\r\n");
      out.write("            headers: { 'Content-Type': 'application/x-www-form-urlencoded', 'Accept': 'application/json' },\r\n");
      out.write("            body: data.toString()\r\n");
      out.write("          }).then(r=>r.json()).then(function(j){\r\n");
      out.write("            if(j && j.success){\r\n");
      out.write("              vm.hide();\r\n");
      out.write("              load();\r\n");
      out.write("              renderPage(1);\r\n");
      out.write("            } else {\r\n");
      out.write("              alert(j && j.message ? j.message : 'Không thể cập nhật');\r\n");
      out.write("            }\r\n");
      out.write("          }).catch(function(){ alert('Lỗi kết nối máy chủ'); });\r\n");
      out.write("        };\r\n");
      out.write("      }\r\n");
      out.write("      }\r\n");
      out.write("      \r\n");
      out.write("      if(cancelLink) {\r\n");
      out.write("        e.preventDefault();\r\n");
      out.write("        const id = cancelLink.getAttribute('data-id');\r\n");
      out.write("        const it = allItems.find(function(x){ return String(x.id) === String(id); });\r\n");
      out.write("        if(!it) return;\r\n");
      out.write("        \r\n");
      out.write("        // Kiểm tra trạng thái trước khi hủy\r\n");
      out.write("        const finalStatus = cancelledItems.has(String(id)) ? 'cancelled' : (it.status || 'pending');\r\n");
      out.write("        if(finalStatus === 'cancelled') {\r\n");
      out.write("          alert('Yêu cầu này đã được hủy rồi!');\r\n");
      out.write("          return;\r\n");
      out.write("        }\r\n");
      out.write("        if(finalStatus !== 'pending' && finalStatus !== 'open') {\r\n");
      out.write("          alert('Chỉ có thể hủy yêu cầu đang chờ xử lý!');\r\n");
      out.write("          return;\r\n");
      out.write("        }\r\n");
      out.write("        \r\n");
      out.write("        if(confirm('Bạn có chắc chắn muốn hủy yêu cầu này?')) {\r\n");
      out.write("          // Đánh dấu item đã hủy và cập nhật hiển thị\r\n");
      out.write("          cancelledItems.add(String(id));\r\n");
      out.write("          renderPage(currentPage); // Cập nhật hiển thị ngay lập tức\r\n");
      out.write("          \r\n");
      out.write("          // Gửi request hủy yêu cầu đến server\r\n");
      out.write("          const data = new URLSearchParams();\r\n");
      out.write("          data.append('action', 'cancel');\r\n");
      out.write("          data.append('id', id);\r\n");
      out.write("          \r\n");
      out.write("          console.log('DEBUG: Sending cancel request with:', data.toString());\r\n");
      out.write("          fetch(ctx + '/api/support-requests', {\r\n");
      out.write("            method: 'POST',\r\n");
      out.write("            headers: { 'Content-Type': 'application/x-www-form-urlencoded', 'Accept': 'application/json' },\r\n");
      out.write("            body: data.toString()\r\n");
      out.write("          }).then(r=>r.json())\r\n");
      out.write("            .then(j=>{\r\n");
      out.write("              if(j && j.success){\r\n");
      out.write("                alert('Đã hủy yêu cầu thành công!');\r\n");
      out.write("                load(); // Reload danh sách từ server\r\n");
      out.write("              } else {\r\n");
      out.write("                // Nếu server từ chối, revert lại trạng thái\r\n");
      out.write("                cancelledItems.delete(String(id));\r\n");
      out.write("                renderPage(currentPage);\r\n");
      out.write("                alert(j && j.message ? j.message : 'Không thể hủy yêu cầu');\r\n");
      out.write("              }\r\n");
      out.write("            })\r\n");
      out.write("            .catch(()=> {\r\n");
      out.write("              // Nếu có lỗi kết nối, revert lại trạng thái\r\n");
      out.write("              cancelledItems.delete(String(id));\r\n");
      out.write("              renderPage(currentPage);\r\n");
      out.write("              alert('Lỗi kết nối máy chủ');\r\n");
      out.write("            });\r\n");
      out.write("        }\r\n");
      out.write("      }\r\n");
      out.write("    });\r\n");
      out.write("  });\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("    <script src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js\"></script>\r\n");
      out.write("    <script>\r\n");
      out.write("        // Smooth scrolling for navigation links\r\n");
      out.write("        document.querySelectorAll('a[href^=\"#\"]').forEach(anchor => {\r\n");
      out.write("            anchor.addEventListener('click', function (e) {\r\n");
      out.write("                e.preventDefault();\r\n");
      out.write("                const target = document.querySelector(this.getAttribute('href'));\r\n");
      out.write("                if (target) {\r\n");
      out.write("                    target.scrollIntoView({\r\n");
      out.write("                        behavior: 'smooth',\r\n");
      out.write("                        block: 'start'\r\n");
      out.write("                    });\r\n");
      out.write("                }\r\n");
      out.write("            });\r\n");
      out.write("        });\r\n");
      out.write("\r\n");
      out.write("        // Add scroll effect to navbar\r\n");
      out.write("        window.addEventListener('scroll', function() {\r\n");
      out.write("            const navbar = document.querySelector('.navbar');\r\n");
      out.write("            if (window.scrollY > 50) {\r\n");
      out.write("                navbar.classList.add('scrolled');\r\n");
      out.write("            } else {\r\n");
      out.write("                navbar.classList.remove('scrolled');\r\n");
      out.write("            }\r\n");
      out.write("        });\r\n");
      out.write("\r\n");
      out.write("        // Banner indicators functionality\r\n");
      out.write("        const bannerIndicators = document.querySelectorAll('.banner-indicators .indicator');\r\n");
      out.write("        bannerIndicators.forEach((indicator, index) => {\r\n");
      out.write("            indicator.addEventListener('click', function() {\r\n");
      out.write("                bannerIndicators.forEach(ind => ind.classList.remove('active'));\r\n");
      out.write("                this.classList.add('active');\r\n");
      out.write("            });\r\n");
      out.write("        });\r\n");
      out.write("\r\n");
      out.write("        // Quote indicators functionality\r\n");
      out.write("        const quoteIndicators = document.querySelectorAll('.quote-indicators .quote-indicator');\r\n");
      out.write("        quoteIndicators.forEach((indicator, index) => {\r\n");
      out.write("            indicator.addEventListener('click', function() {\r\n");
      out.write("                quoteIndicators.forEach(ind => ind.classList.remove('active'));\r\n");
      out.write("                this.classList.add('active');\r\n");
      out.write("            });\r\n");
      out.write("        });\r\n");
      out.write("        \r\n");
      out.write("\r\n");
      out.write("        \r\n");
      out.write("\r\n");
      out.write("      \r\n");
      out.write("\r\n");
      out.write("        \r\n");
      out.write("    \r\n");
      out.write("    </script>\r\n");
      out.write("   <div class=\"mt-5\"></div>\r\n");
      out.write("    ");
      out.write('\r');
      out.write('\n');
      out.write("\r\n");
      out.write("<style>\r\n");
      out.write("    .footer { background: #2c3e50; color: #ecf0f1; padding: 50px 0 20px; }\r\n");
      out.write("    .footer h5 { color: #e74c3c; font-weight: 700; margin-bottom: 20px; text-transform: uppercase; }\r\n");
      out.write("    .footer p, .footer li { color: #bdc3c7; line-height: 1.8; }\r\n");
      out.write("    .footer a { color: #bdc3c7; text-decoration: none; transition: color 0.3s; }\r\n");
      out.write("    .footer a:hover { color: #e74c3c; }\r\n");
      out.write("    .footer-bottom { border-top: 1px solid #34495e; padding-top: 20px; margin-top: 30px; text-align: center; }\r\n");
      out.write("    .social-icons { display: flex; gap: 15px; margin-top: 15px; }\r\n");
      out.write("    .social-icons a { display: inline-block; width: 40px; height: 40px; background: #34495e; border-radius: 50%; text-align: center; line-height: 40px; transition: background 0.3s; }\r\n");
      out.write("    .social-icons a:hover { background: #e74c3c; }\r\n");
      out.write("\r\n");
      out.write("    /* Floating action buttons (FB, Zalo, Call) */\r\n");
      out.write("    .floating-icons { position: fixed; right: 18px; bottom: 22px; z-index: 9999; display: flex; flex-direction: column; gap: 12px; }\r\n");
      out.write("    .floating-icons a { width: 52px; height: 52px; border-radius: 50%; display: flex; align-items: center; justify-content: center; color: #fff; box-shadow: 0 8px 20px rgba(0,0,0,.25); transition: transform .15s ease, box-shadow .15s ease; text-decoration: none; }\r\n");
      out.write("    .floating-icons a:hover { transform: translateY(-2px); box-shadow: 0 10px 26px rgba(0,0,0,.3); }\r\n");
      out.write("    .floating-icons .facebook { background: #1877f2; }\r\n");
      out.write("    .floating-icons .zalo { background: #0068ff; font-weight: 700; }\r\n");
      out.write("    .floating-icons .phone { background: #dc3545; }\r\n");
      out.write("    .floating-icons .zalo span { font-size: 14px; letter-spacing: .5px; }\r\n");
      out.write("    @media (max-width: 768px) { .floating-icons a { width: 46px; height: 46px; } }\r\n");
      out.write("</style>\r\n");
      out.write("\r\n");
      out.write("<footer class=\"footer\">\r\n");
      out.write("    <div class=\"container\">\r\n");
      out.write("        <div class=\"row\">\r\n");
      out.write("            <div class=\"col-lg-4 mb-4\">\r\n");
      out.write("                <h5>HOÀ LẠC ELECTRIC</h5>\r\n");
      out.write("                <p>Chuyên gia giải pháp máy phát điện công nghiệp với hơn 20 năm kinh nghiệm. Cam kết mang đến sản phẩm chất lượng cao và dịch vụ chuyên nghiệp.</p>\r\n");
      out.write("                <div class=\"social-icons\">\r\n");
      out.write("                    <a href=\"#\"><i class=\"fab fa-facebook-f\"></i></a>\r\n");
      out.write("                    <a href=\"#\"><i class=\"fab fa-youtube\"></i></a>\r\n");
      out.write("                    <a href=\"#\"><i class=\"fab fa-linkedin-in\"></i></a>\r\n");
      out.write("                    <a href=\"#\"><i class=\"fab fa-instagram\"></i></a>\r\n");
      out.write("                </div>\r\n");
      out.write("            </div>\r\n");
      out.write("            <div class=\"col-lg-2 col-md-6 mb-4\">\r\n");
      out.write("                <h5>Sản phẩm</h5>\r\n");
      out.write("                <ul class=\"list-unstyled\">\r\n");
      out.write("                    <li><a href=\"#\">Máy phát điện Diesel</a></li>\r\n");
      out.write("                    <li><a href=\"#\">Máy phát điện 3 pha</a></li>\r\n");
      out.write("                    <li><a href=\"#\">Máy phát điện công nghiệp</a></li>\r\n");
      out.write("                    <li><a href=\"#\">Phụ kiện máy phát điện</a></li>\r\n");
      out.write("                </ul>\r\n");
      out.write("            </div>\r\n");
      out.write("            <div class=\"col-lg-2 col-md-6 mb-4\">\r\n");
      out.write("                <h5>Dịch vụ</h5>\r\n");
      out.write("                <ul class=\"list-unstyled\">\r\n");
      out.write("                    <li><a href=\"#\">Cho thuê máy phát điện</a></li>\r\n");
      out.write("                    <li><a href=\"#\">Sửa chữa & bảo trì</a></li>\r\n");
      out.write("                    <li><a href=\"#\">Tư vấn kỹ thuật</a></li>\r\n");
      out.write("                    <li><a href=\"#\">Lắp đặt hệ thống</a></li>\r\n");
      out.write("                </ul>\r\n");
      out.write("            </div>\r\n");
      out.write("            <div class=\"col-lg-4 mb-4\">\r\n");
      out.write("                <h5>Liên hệ</h5>\r\n");
      out.write("                <p><i class=\"fas fa-map-marker-alt me-2\"></i> Đại Thanh, Hà Nội</p>\r\n");
      out.write("                <p><i class=\"fas fa-phone me-2\"></i> 0989.888.999</p>\r\n");
      out.write("                <p><i class=\"fas fa-envelope me-2\"></i> Mayphatdienhoalac@gmail.com</p>\r\n");
      out.write("                <p><i class=\"fas fa-clock me-2\"></i> Thứ 2 - Thứ 6: 08:00 - 17:00</p>\r\n");
      out.write("            </div>\r\n");
      out.write("        </div>\r\n");
      out.write("        <div class=\"footer-bottom\">\r\n");
      out.write("            <p>&copy; 2024 HOÀ LẠC ELECTRIC. Tất cả quyền được bảo lưu.</p>\r\n");
      out.write("        </div>\r\n");
      out.write("    </div>\r\n");
      out.write("</footer>\r\n");
      out.write("\r\n");
      out.write("<!-- Floating action buttons: Facebook, Zalo, Call -->\r\n");
      out.write("<div class=\"floating-icons\" aria-label=\"Quick contact actions\">\r\n");
      out.write("    <a class=\"facebook\" href=\"https://facebook.com\" target=\"_blank\" rel=\"noopener\" aria-label=\"Facebook\">\r\n");
      out.write("        <i class=\"fab fa-facebook-f\"></i>\r\n");
      out.write("    </a>\r\n");
      out.write("    <a class=\"zalo\" href=\"https://zalo.me/0989888999\" target=\"_blank\" rel=\"noopener\" aria-label=\"Zalo\"><span>Z</span></a>\r\n");
      out.write("    <a class=\"phone\" href=\"tel:0989888999\" aria-label=\"Gọi hotline\">\r\n");
      out.write("        <i class=\"fas fa-phone\"></i>\r\n");
      out.write("    </a>\r\n");
      out.write("    </div>");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try { out.clearBuffer(); } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_c_005fchoose_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:choose
    org.apache.taglibs.standard.tag.common.core.ChooseTag _jspx_th_c_005fchoose_005f0 = (org.apache.taglibs.standard.tag.common.core.ChooseTag) _005fjspx_005ftagPool_005fc_005fchoose.get(org.apache.taglibs.standard.tag.common.core.ChooseTag.class);
    _jspx_th_c_005fchoose_005f0.setPageContext(_jspx_page_context);
    _jspx_th_c_005fchoose_005f0.setParent(null);
    int _jspx_eval_c_005fchoose_005f0 = _jspx_th_c_005fchoose_005f0.doStartTag();
    if (_jspx_eval_c_005fchoose_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
      do {
        out.write("\r\n");
        out.write("                    ");
        if (_jspx_meth_c_005fwhen_005f0(_jspx_th_c_005fchoose_005f0, _jspx_page_context))
          return true;
        out.write("\r\n");
        out.write("                    ");
        if (_jspx_meth_c_005fotherwise_005f0(_jspx_th_c_005fchoose_005f0, _jspx_page_context))
          return true;
        out.write("\r\n");
        out.write("                ");
        int evalDoAfterBody = _jspx_th_c_005fchoose_005f0.doAfterBody();
        if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
          break;
      } while (true);
    }
    if (_jspx_th_c_005fchoose_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
      _005fjspx_005ftagPool_005fc_005fchoose.reuse(_jspx_th_c_005fchoose_005f0);
      return true;
    }
    _005fjspx_005ftagPool_005fc_005fchoose.reuse(_jspx_th_c_005fchoose_005f0);
    return false;
  }

  private boolean _jspx_meth_c_005fwhen_005f0(javax.servlet.jsp.tagext.JspTag _jspx_th_c_005fchoose_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:when
    org.apache.taglibs.standard.tag.rt.core.WhenTag _jspx_th_c_005fwhen_005f0 = (org.apache.taglibs.standard.tag.rt.core.WhenTag) _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.WhenTag.class);
    _jspx_th_c_005fwhen_005f0.setPageContext(_jspx_page_context);
    _jspx_th_c_005fwhen_005f0.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fchoose_005f0);
    // /header.jsp(59,20) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_c_005fwhen_005f0.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${sessionScope.isLoggedIn eq true}", java.lang.Boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false)).booleanValue());
    int _jspx_eval_c_005fwhen_005f0 = _jspx_th_c_005fwhen_005f0.doStartTag();
    if (_jspx_eval_c_005fwhen_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
      do {
        out.write("\r\n");
        out.write("                        <a href=\"profile.jsp\" class=\"user-info\" style=\"color: #dc3545; font-weight: 600; margin-right: 15px; text-decoration:none;\">\r\n");
        out.write("                            <i class=\"fas fa-user\"></i>\r\n");
        out.write("                            ");
        if (_jspx_meth_c_005fout_005f0(_jspx_th_c_005fwhen_005f0, _jspx_page_context))
          return true;
        out.write("\r\n");
        out.write("                        </a>\r\n");
        out.write("                        <a href=\"logout\" style=\"color: inherit; text-decoration: none;\" title=\"Đăng xuất\">\r\n");
        out.write("                            <i class=\"fas fa-sign-out-alt\"></i>\r\n");
        out.write("                        </a>\r\n");
        out.write("                    ");
        int evalDoAfterBody = _jspx_th_c_005fwhen_005f0.doAfterBody();
        if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
          break;
      } while (true);
    }
    if (_jspx_th_c_005fwhen_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
      _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest.reuse(_jspx_th_c_005fwhen_005f0);
      return true;
    }
    _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest.reuse(_jspx_th_c_005fwhen_005f0);
    return false;
  }

  private boolean _jspx_meth_c_005fout_005f0(javax.servlet.jsp.tagext.JspTag _jspx_th_c_005fwhen_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:out
    org.apache.taglibs.standard.tag.rt.core.OutTag _jspx_th_c_005fout_005f0 = (org.apache.taglibs.standard.tag.rt.core.OutTag) _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.OutTag.class);
    _jspx_th_c_005fout_005f0.setPageContext(_jspx_page_context);
    _jspx_th_c_005fout_005f0.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fwhen_005f0);
    // /header.jsp(62,28) name = value type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_c_005fout_005f0.setValue((java.lang.Object) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${empty sessionScope.fullName ? sessionScope.username : sessionScope.fullName}", java.lang.Object.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
    int _jspx_eval_c_005fout_005f0 = _jspx_th_c_005fout_005f0.doStartTag();
    if (_jspx_th_c_005fout_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
      _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fnobody.reuse(_jspx_th_c_005fout_005f0);
      return true;
    }
    _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fnobody.reuse(_jspx_th_c_005fout_005f0);
    return false;
  }

  private boolean _jspx_meth_c_005fotherwise_005f0(javax.servlet.jsp.tagext.JspTag _jspx_th_c_005fchoose_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:otherwise
    org.apache.taglibs.standard.tag.common.core.OtherwiseTag _jspx_th_c_005fotherwise_005f0 = (org.apache.taglibs.standard.tag.common.core.OtherwiseTag) _005fjspx_005ftagPool_005fc_005fotherwise.get(org.apache.taglibs.standard.tag.common.core.OtherwiseTag.class);
    _jspx_th_c_005fotherwise_005f0.setPageContext(_jspx_page_context);
    _jspx_th_c_005fotherwise_005f0.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fchoose_005f0);
    int _jspx_eval_c_005fotherwise_005f0 = _jspx_th_c_005fotherwise_005f0.doStartTag();
    if (_jspx_eval_c_005fotherwise_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
      do {
        out.write("\r\n");
        out.write("                        <a href=\"login.jsp\" style=\"color: inherit; text-decoration: none;\" title=\"Đăng nhập\">\r\n");
        out.write("                            <i class=\"fas fa-user\"></i>\r\n");
        out.write("                        </a>\r\n");
        out.write("                    ");
        int evalDoAfterBody = _jspx_th_c_005fotherwise_005f0.doAfterBody();
        if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
          break;
      } while (true);
    }
    if (_jspx_th_c_005fotherwise_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
      _005fjspx_005ftagPool_005fc_005fotherwise.reuse(_jspx_th_c_005fotherwise_005f0);
      return true;
    }
    _005fjspx_005ftagPool_005fc_005fotherwise.reuse(_jspx_th_c_005fotherwise_005f0);
    return false;
  }

  private boolean _jspx_meth_c_005fif_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:if
    org.apache.taglibs.standard.tag.rt.core.IfTag _jspx_th_c_005fif_005f0 = (org.apache.taglibs.standard.tag.rt.core.IfTag) _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.IfTag.class);
    _jspx_th_c_005fif_005f0.setPageContext(_jspx_page_context);
    _jspx_th_c_005fif_005f0.setParent(null);
    // /header.jsp(91,12) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_c_005fif_005f0.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${sessionScope.isLoggedIn eq true and sessionScope.userRole eq 'customer'}", java.lang.Boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false)).booleanValue());
    int _jspx_eval_c_005fif_005f0 = _jspx_th_c_005fif_005f0.doStartTag();
    if (_jspx_eval_c_005fif_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
      do {
        out.write("\r\n");
        out.write("                <li class=\"nav-item\"><a class=\"nav-link\" href=\"support.jsp\" id=\"nav-support\">HỖ TRỢ</a></li>\r\n");
        out.write("            ");
        int evalDoAfterBody = _jspx_th_c_005fif_005f0.doAfterBody();
        if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
          break;
      } while (true);
    }
    if (_jspx_th_c_005fif_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
      _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.reuse(_jspx_th_c_005fif_005f0);
      return true;
    }
    _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.reuse(_jspx_th_c_005fif_005f0);
    return false;
  }
}

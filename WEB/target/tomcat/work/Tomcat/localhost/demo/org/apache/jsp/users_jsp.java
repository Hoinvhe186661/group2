/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.47
 * Generated at: 2025-10-20 19:10:21 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class users_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

 
    // So sánh chính xác (dùng cho dropdown)
    private boolean equalsParam(String param, String actual) {
        if (param == null || param.trim().isEmpty()) return true;
        String val = actual == null ? "" : actual.trim();
        return param.trim().equalsIgnoreCase(val);
    }
    
    // Tìm kiếm chứa từ khóa (dùng cho ô tìm kiếm)
    private boolean containsParam(String param, String actual) {
        if (param == null || param.trim().isEmpty()) return true;
        String val = actual == null ? "" : actual.trim().toLowerCase();
        return val.contains(param.trim().toLowerCase());
    }
    
    // Decode UTF-8 cho tham số
    private String decodeParam(String s) {
        if (s == null) return null;
        try {
            return new String(s.getBytes("ISO-8859-1"), "UTF-8").trim();
        } catch (Exception e) { 
            return s.trim(); 
        }
    }
    
    // Lấy vai trò của user
    private String getUserRole(com.hlgenerator.model.User user) {
        try {
            String role = (String)com.hlgenerator.model.User.class.getMethod("getRole").invoke(user);
            return role != null ? role : (user.getRoleDisplayName() != null ? user.getRoleDisplayName() : "");
        } catch (Exception e) {
            return user.getRoleDisplayName() != null ? user.getRoleDisplayName() : "";
        }
    }
    
    // Chuyển đổi vai trò sang tiếng Việt
    private String roleLabel(String raw) {
        if (raw == null) return "-";
        switch (raw) {
            case "admin": return "Quản trị viên";
            case "customer_support": return "Hỗ trợ khách hàng";
            case "technical_staff": return "Nhân viên kỹ thuật";
            case "head_technician": return "Trưởng phòng kỹ thuật";
            case "storekeeper": return "Thủ kho";
            case "customer": return "Khách hàng";
            case "guest": return "Khách";
            default: return raw;
        }
    }
    
    // Chuyển đổi trạng thái sang tiếng Việt
    private String statusLabel(boolean active) { 
        return active ? "Hoạt động" : "Tạm khóa"; 
    }

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write('\r');
      out.write('\n');

    // Kiểm tra đăng nhập
    String username = (String) session.getAttribute("username");
    Boolean isLoggedIn = (Boolean) session.getAttribute("isLoggedIn");
    String userRole = (String) session.getAttribute("userRole");
    
    if (username == null || isLoggedIn == null || !isLoggedIn) {
        response.sendRedirect(request.getContextPath() + "/login.jsp");
        return;
    }
    
    // Kiểm tra quyền truy cập - chỉ admin mới có thể quản lý người dùng
    if (!"admin".equals(userRole)) {
        response.sendRedirect(request.getContextPath() + "/403.jsp");
        return;
    }

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("    <meta charset=\"UTF-8\">\r\n");
      out.write("    <title>Bảng điều khiển | Quản lý người dùng</title>\r\n");
      out.write("    <meta content='width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no' name='viewport'>\r\n");
      out.write("    \r\n");
      out.write("    <!-- bootstrap 3.0.2 -->\r\n");
      out.write("    <link href=\"css/bootstrap.min.css\" rel=\"stylesheet\" type=\"text/css\" />\r\n");
      out.write("    <!-- font Awesome -->\r\n");
      out.write("    <link href=\"css/font-awesome.min.css\" rel=\"stylesheet\" type=\"text/css\" />\r\n");
      out.write("    <!-- Ionicons -->\r\n");
      out.write("    <link href=\"css/ionicons.min.css\" rel=\"stylesheet\" type=\"text/css\" />\r\n");
      out.write("    <!-- DataTables -->\r\n");
      out.write("    <link href=\"css/datatables/dataTables.bootstrap.css\" rel=\"stylesheet\" type=\"text/css\" />\r\n");
      out.write("    <!-- Theme style -->\r\n");
      out.write("    <link href=\"css/style.css\" rel=\"stylesheet\" type=\"text/css\" />\r\n");
      out.write("    <link href='http://fonts.googleapis.com/css?family=Lato' rel='stylesheet' type='text/css'>\r\n");
      out.write("    \r\n");
      out.write("    <style>\r\n");
      out.write("        :root {\r\n");
      out.write("            --btn-padding: 4px 12px;\r\n");
      out.write("            --btn-radius: 4px;\r\n");
      out.write("            --btn-transition: all 0.15s ease;\r\n");
      out.write("            --shadow-light: 0 2px 4px;\r\n");
      out.write("            --shadow-hover: 0 4px 8px;\r\n");
      out.write("        }\r\n");
      out.write("        \r\n");
      out.write("        .action-buttons {\r\n");
      out.write("            white-space: nowrap;\r\n");
      out.write("            min-width: 200px;\r\n");
      out.write("            max-width: 250px;\r\n");
      out.write("        }\r\n");
      out.write("        \r\n");
      out.write("        .action-buttons .btn-group {\r\n");
      out.write("            display: flex;\r\n");
      out.write("            gap: 4px;\r\n");
      out.write("            width: 100%;\r\n");
      out.write("        }\r\n");
      out.write("        \r\n");
      out.write("        .action-buttons .btn {\r\n");
      out.write("            padding: var(--btn-padding);\r\n");
      out.write("            font-size: 11px;\r\n");
      out.write("            font-weight: 500;\r\n");
      out.write("            border-radius: var(--btn-radius);\r\n");
      out.write("            border: none;\r\n");
      out.write("            transition: var(--btn-transition);\r\n");
      out.write("            text-transform: none;\r\n");
      out.write("            letter-spacing: 0.3px;\r\n");
      out.write("            flex: 1;\r\n");
      out.write("            min-width: 60px;\r\n");
      out.write("            text-align: center;\r\n");
      out.write("        }\r\n");
      out.write("        \r\n");
      out.write("        .action-buttons .dropdown-menu {\r\n");
      out.write("            min-width: 180px;\r\n");
      out.write("            box-shadow: 0 4px 12px rgba(0,0,0,0.15);\r\n");
      out.write("            border: none;\r\n");
      out.write("            border-radius: 6px;\r\n");
      out.write("            padding: 5px 0;\r\n");
      out.write("        }\r\n");
      out.write("        \r\n");
      out.write("        .action-buttons .dropdown-menu li a {\r\n");
      out.write("            padding: 8px 15px;\r\n");
      out.write("            font-size: 12px;\r\n");
      out.write("            color: #333;\r\n");
      out.write("            transition: var(--btn-transition);\r\n");
      out.write("        }\r\n");
      out.write("        \r\n");
      out.write("        .action-buttons .dropdown-menu li a:hover {\r\n");
      out.write("            background-color: #f8f9fa;\r\n");
      out.write("            color: #000;\r\n");
      out.write("        }\r\n");
      out.write("        \r\n");
      out.write("        .action-buttons .dropdown-menu .divider {\r\n");
      out.write("            margin: 5px 0;\r\n");
      out.write("            background-color: #e9ecef;\r\n");
      out.write("        }\r\n");
      out.write("        \r\n");
      out.write("        .action-buttons .btn i {\r\n");
      out.write("            margin-right: 4px;\r\n");
      out.write("            font-size: 10px;\r\n");
      out.write("        }\r\n");
      out.write("        \r\n");
      out.write("        /* Button colors */\r\n");
      out.write("        .action-buttons .btn-info { background: linear-gradient(135deg, #3498db, #2980b9); color: white; box-shadow: var(--shadow-light) rgba(52, 152, 219, 0.3); }\r\n");
      out.write("        .action-buttons .btn-info:hover { background: linear-gradient(135deg, #2980b9, #21618c); transform: translateY(-1px); box-shadow: var(--shadow-hover) rgba(52, 152, 219, 0.4); }\r\n");
      out.write("        .action-buttons .btn-warning { background: linear-gradient(135deg, #f39c12, #e67e22); color: white; box-shadow: var(--shadow-light) rgba(243, 156, 18, 0.3); }\r\n");
      out.write("        .action-buttons .btn-warning:hover { background: linear-gradient(135deg, #e67e22, #d35400); transform: translateY(-1px); box-shadow: var(--shadow-hover) rgba(243, 156, 18, 0.4); }\r\n");
      out.write("        .action-buttons .btn-primary { background: linear-gradient(135deg, #9b59b6, #8e44ad); color: white; box-shadow: var(--shadow-light) rgba(155, 89, 182, 0.3); }\r\n");
      out.write("        .action-buttons .btn-primary:hover { background: linear-gradient(135deg, #8e44ad, #7d3c98); transform: translateY(-1px); box-shadow: var(--shadow-hover) rgba(155, 89, 182, 0.4); }\r\n");
      out.write("        .action-buttons .btn-success { background: linear-gradient(135deg, #27ae60, #229954); color: white; box-shadow: var(--shadow-light) rgba(39, 174, 96, 0.3); }\r\n");
      out.write("        .action-buttons .btn-success:hover { background: linear-gradient(135deg, #229954, #1e8449); transform: translateY(-1px); box-shadow: var(--shadow-hover) rgba(39, 174, 96, 0.4); }\r\n");
      out.write("        .action-buttons .btn-danger { background: linear-gradient(135deg, #e74c3c, #c0392b); color: white; box-shadow: var(--shadow-light) rgba(231, 76, 60, 0.3); }\r\n");
      out.write("        .action-buttons .btn-danger:hover { background: linear-gradient(135deg, #c0392b, #a93226); transform: translateY(-1px); box-shadow: var(--shadow-hover) rgba(231, 76, 60, 0.4); }\r\n");
      out.write("        \r\n");
      out.write("        .action-buttons .btn:focus { outline: none; box-shadow: 0 0 0 3px rgba(0, 123, 255, 0.25); }\r\n");
      out.write("        .action-buttons .btn:active { transform: translateY(0); box-shadow: 0 1px 2px rgba(0,0,0,0.2); }\r\n");
      out.write("        \r\n");
      out.write("        @media (max-width: 768px) {\r\n");
      out.write("            .action-buttons { min-width: 160px; max-width: 180px; }\r\n");
      out.write("            .action-buttons .btn { padding: 3px 6px; font-size: 10px; }\r\n");
      out.write("        }\r\n");
      out.write("        \r\n");
      out.write("        /* Readonly field styling */\r\n");
      out.write("        .bg-gray-light {\r\n");
      out.write("            background-color: #f4f4f4 !important;\r\n");
      out.write("            cursor: not-allowed !important;\r\n");
      out.write("            border-color: #ddd !important;\r\n");
      out.write("        }\r\n");
      out.write("        \r\n");
      out.write("        input[readonly].bg-gray-light {\r\n");
      out.write("            opacity: 0.8;\r\n");
      out.write("        }\r\n");
      out.write("    </style>\r\n");
      out.write("</head>\r\n");
      out.write("<body class=\"skin-black\">\r\n");
      out.write("    <!-- header logo: style can be found in header.less -->\r\n");
      out.write("    <header class=\"header\">\r\n");
      out.write("        <a href=\"users.jsp\" class=\"logo\">\r\n");
      out.write("            Bảng điều khiển \r\n");
      out.write("        </a>\r\n");
      out.write("        <!-- Header Navbar: style can be found in header.less -->\r\n");
      out.write("        <nav class=\"navbar navbar-static-top\" role=\"navigation\">\r\n");
      out.write("            <!-- Sidebar toggle button-->\r\n");
      out.write("            <a href=\"#\" class=\"navbar-btn sidebar-toggle\" data-toggle=\"offcanvas\" role=\"button\">\r\n");
      out.write("                <span class=\"sr-only\">Toggle navigation</span>\r\n");
      out.write("                <span class=\"icon-bar\"></span>\r\n");
      out.write("                <span class=\"icon-bar\"></span>\r\n");
      out.write("                <span class=\"icon-bar\"></span>\r\n");
      out.write("            </a>\r\n");
      out.write("            <div class=\"navbar-right\">\r\n");
      out.write("                <ul class=\"nav navbar-nav\">\r\n");
      out.write("                    <!-- User Account: style can be found in dropdown.less -->\r\n");
      out.write("                    <li class=\"dropdown user user-menu\">\r\n");
      out.write("                        <a href=\"#\" class=\"dropdown-toggle\" data-toggle=\"dropdown\">\r\n");
      out.write("                            <i class=\"fa fa-user\"></i>\r\n");
      out.write("                            <span>Admin <i class=\"caret\"></i></span>\r\n");
      out.write("                        </a>\r\n");
      out.write("                        <ul class=\"dropdown-menu dropdown-custom dropdown-menu-right\">\r\n");
      out.write("                            <li class=\"dropdown-header text-center\">Tài khoản</li>\r\n");
      out.write("                            <li>\r\n");
      out.write("                                <a href=\"profile.jsp\">\r\n");
      out.write("                                <i class=\"fa fa-user fa-fw pull-right\"></i>\r\n");
      out.write("                                    Hồ sơ\r\n");
      out.write("                                </a>\r\n");
      out.write("                                <a href=\"settings.jsp\">\r\n");
      out.write("                                <i class=\"fa fa-cog fa-fw pull-right\"></i>\r\n");
      out.write("                                    Cài đặt\r\n");
      out.write("                                </a>\r\n");
      out.write("                            </li>\r\n");
      out.write("                            <li class=\"divider\"></li>\r\n");
      out.write("                            <li>\r\n");
      out.write("                                <a href=\"logout\"><i class=\"fa fa-ban fa-fw pull-right\"></i> Đăng xuất</a>\r\n");
      out.write("                            </li>\r\n");
      out.write("                        </ul>\r\n");
      out.write("                    </li>\r\n");
      out.write("                </ul>\r\n");
      out.write("            </div>\r\n");
      out.write("        </nav>\r\n");
      out.write("    </header>\r\n");
      out.write("    \r\n");
      out.write("    <div class=\"wrapper row-offcanvas row-offcanvas-left\">\r\n");
      out.write("        <!-- Left side column. contains the logo and sidebar -->\r\n");
      out.write("        <aside class=\"left-side sidebar-offcanvas\">\r\n");
      out.write("            <!-- sidebar: style can be found in sidebar.less -->\r\n");
      out.write("            <section class=\"sidebar\">\r\n");
      out.write("                <!-- Sidebar user panel -->\r\n");
      out.write("                <div class=\"user-panel\">\r\n");
      out.write("                    <div class=\"pull-left image\">\r\n");
      out.write("                        <img src=\"img/26115.jpg\" class=\"img-circle\" alt=\"User Image\" />\r\n");
      out.write("                    </div>\r\n");
      out.write("                    <div class=\"pull-left info\">\r\n");
      out.write("                        <p>Xin chào, Admin</p>\r\n");
      out.write("                        <a href=\"#\"><i class=\"fa fa-circle text-success\"></i> Online</a>\r\n");
      out.write("                    </div>\r\n");
      out.write("                </div>\r\n");
      out.write("                <!-- search form -->\r\n");
      out.write("                <form action=\"#\" method=\"get\" class=\"sidebar-form\">\r\n");
      out.write("                    <div class=\"input-group\">\r\n");
      out.write("                        <input type=\"text\" name=\"q\" class=\"form-control\" placeholder=\"Tìm kiếm...\"/>\r\n");
      out.write("                        <span class=\"input-group-btn\">\r\n");
      out.write("                            <button type='submit' name='seach' id='search-btn' class=\"btn btn-flat\"><i class=\"fa fa-search\"></i></button>\r\n");
      out.write("                        </span>\r\n");
      out.write("                    </div>\r\n");
      out.write("                </form>\r\n");
      out.write("                <!-- /.search form -->\r\n");
      out.write("                <!-- sidebar menu: : style can be found in sidebar.less -->\r\n");
      out.write("                <ul class=\"sidebar-menu\">\r\n");
      out.write("                    <li>\r\n");
      out.write("                        <a href=\"admin.jsp\">\r\n");
      out.write("                            <i class=\"fa fa-dashboard\"></i> <span>Bảng điều khiển</span>\r\n");
      out.write("                        </a>\r\n");
      out.write("                    </li>\r\n");
      out.write("                    \r\n");
      out.write("                    <li>\r\n");
      out.write("                        <a href=\"customers.jsp\">\r\n");
      out.write("                            <i class=\"fa fa-users\"></i> <span>Quản lý khách hàng</span>\r\n");
      out.write("                        </a>\r\n");
      out.write("                    </li>\r\n");
      out.write("                    <li class=\"active\">\r\n");
      out.write("                        <a href=\"users.jsp\">\r\n");
      out.write("                            <i class=\"fa fa-user-secret\"></i> <span>Quản lý người dùng</span>\r\n");
      out.write("                        </a>\r\n");
      out.write("                    </li>\r\n");
      out.write("                    <li>\r\n");
      out.write("                        <a href=\"reports.jsp\">\r\n");
      out.write("                            <i class=\"fa fa-bar-chart\"></i> <span>Báo cáo</span>\r\n");
      out.write("                        </a>\r\n");
      out.write("                    </li>\r\n");
      out.write("                    <li>\r\n");
      out.write("                        <a href=\"settings.jsp\">\r\n");
      out.write("                            <i class=\"fa fa-cog\"></i> <span>Cài đặt</span>\r\n");
      out.write("                        </a>\r\n");
      out.write("                    </li>\r\n");
      out.write("                </ul>\r\n");
      out.write("            </section>\r\n");
      out.write("            <!-- /.sidebar -->\r\n");
      out.write("        </aside>\r\n");
      out.write("\r\n");
      out.write("        <aside class=\"right-side\">\r\n");
      out.write("            <!-- Main content -->\r\n");
      out.write("            <section class=\"content\">\r\n");
      out.write("                <div class=\"row\">\r\n");
      out.write("                    <div class=\"col-xs-12\">\r\n");
      out.write("                        <div class=\"panel\">\r\n");
      out.write("                            <header class=\"panel-heading\">\r\n");
      out.write("                                <h3>Quản lý người dùng</h3>\r\n");
      out.write("                                <div class=\"panel-tools\">\r\n");
      out.write("                                    <button class=\"btn btn-primary btn-sm\" data-toggle=\"modal\" data-target=\"#addUserModal\">\r\n");
      out.write("                                        <i class=\"fa fa-plus\"></i> Thêm người dùng mới\r\n");
      out.write("                                    </button>\r\n");
      out.write("                                </div>\r\n");
      out.write("                            </header>\r\n");
      out.write("                            <div class=\"panel-body table-responsive\">\r\n");
 request.setCharacterEncoding("UTF-8"); 
      out.write('\r');
      out.write('\n');
      out.write('\r');
      out.write('\n');

    // Load danh sách người dùng
    com.hlgenerator.dao.UserDAO filterDao = new com.hlgenerator.dao.UserDAO();
    java.util.List<com.hlgenerator.model.User> allUsers = filterDao.getAllUsers();
    
    // Lấy tham số filter từ URL
    String pUsername = decodeParam(request.getParameter("username"));
    String pEmail = decodeParam(request.getParameter("email"));
    String pFullName = decodeParam(request.getParameter("fullName"));
    String pPhone = decodeParam(request.getParameter("phone"));
    String pRole = decodeParam(request.getParameter("role"));
    String pStatus = decodeParam(request.getParameter("status"));

    // Lọc danh sách người dùng theo các điều kiện
    java.util.List<com.hlgenerator.model.User> filteredUsers = new java.util.ArrayList<>();
    for (com.hlgenerator.model.User u : allUsers) {
        // Tìm kiếm theo các trường text
        if (!containsParam(pUsername, u.getUsername())) continue;
        if (!containsParam(pEmail, u.getEmail())) continue;
        if (!containsParam(pFullName, u.getFullName())) continue;
        if (!containsParam(pPhone, u.getPhone())) continue;
        
        // So sánh chính xác cho vai trò
        if (!equalsParam(pRole, getUserRole(u))) continue;
        
        // Lọc theo trạng thái
        if (pStatus != null && !pStatus.trim().isEmpty()) {
            boolean wantActive = "active".equalsIgnoreCase(pStatus);
            if (u.isActive() != wantActive) continue;
        }
        
        filteredUsers.add(u);
    }

    // Lấy danh sách vai trò để hiển thị trong dropdown
    java.util.Set<String> roles = new java.util.TreeSet<>();
    for (com.hlgenerator.model.User u : allUsers) {
        String role = getUserRole(u);
        if (role != null && !role.isEmpty()) {
            roles.add(role);
        }
    }

      out.write("\r\n");
      out.write("                                \r\n");
      out.write("                                <form class=\"form-inline\" method=\"get\" action=\"users.jsp\" accept-charset=\"UTF-8\" style=\"margin-bottom: 10px;\">\r\n");
      out.write("                                    <div class=\"row\" style=\"margin-bottom: 10px;\">\r\n");
      out.write("                                        <div class=\"col-sm-2\">\r\n");
      out.write("                                            <label for=\"filterUsername\">Tên đăng nhập</label>\r\n");
      out.write("                                            <input type=\"text\" id=\"filterUsername\" name=\"username\" \r\n");
      out.write("                                                   class=\"form-control\" placeholder=\"Tìm kiếm...\" \r\n");
      out.write("                                                   value=\"");
      out.print( pUsername != null ? pUsername : "" );
      out.write("\" style=\"width:100%\">\r\n");
      out.write("                                        </div>\r\n");
      out.write("                                        <div class=\"col-sm-2\">\r\n");
      out.write("                                            <label for=\"filterEmail\">Email</label>\r\n");
      out.write("                                            <input type=\"text\" id=\"filterEmail\" name=\"email\" \r\n");
      out.write("                                                   class=\"form-control\" placeholder=\"Tìm kiếm...\" \r\n");
      out.write("                                                   value=\"");
      out.print( pEmail != null ? pEmail : "" );
      out.write("\" style=\"width:100%\">\r\n");
      out.write("                                        </div>\r\n");
      out.write("                                        <div class=\"col-sm-2\">\r\n");
      out.write("                                            <label for=\"filterFullName\">Họ tên</label>\r\n");
      out.write("                                            <input type=\"text\" id=\"filterFullName\" name=\"fullName\" \r\n");
      out.write("                                                   class=\"form-control\" placeholder=\"Tìm kiếm...\" \r\n");
      out.write("                                                   value=\"");
      out.print( pFullName != null ? pFullName : "" );
      out.write("\" style=\"width:100%\">\r\n");
      out.write("                                        </div>\r\n");
      out.write("                                        <div class=\"col-sm-2\">\r\n");
      out.write("                                            <label for=\"filterPhone\">Số điện thoại</label>\r\n");
      out.write("                                            <input type=\"text\" id=\"filterPhone\" name=\"phone\" \r\n");
      out.write("                                                   class=\"form-control\" placeholder=\"Tìm kiếm...\" \r\n");
      out.write("                                                   value=\"");
      out.print( pPhone != null ? pPhone : "" );
      out.write("\" style=\"width:100%\">\r\n");
      out.write("                                        </div>\r\n");
      out.write("                                        <div class=\"col-sm-2\">\r\n");
      out.write("                                            <label for=\"filterRole\">Vai trò</label>\r\n");
      out.write("                                            <select id=\"filterRole\" name=\"role\" class=\"form-control\" style=\"width:100%\">\r\n");
      out.write("                                                <option value=\"\">Tất cả</option>\r\n");
      out.write("                                                ");
 for (String r : roles) { 
      out.write("\r\n");
      out.write("                                                <option value=\"");
      out.print( r );
      out.write('"');
      out.write(' ');
      out.print( (pRole != null && pRole.equalsIgnoreCase(r)) ? "selected" : "" );
      out.write(">\r\n");
      out.write("                                                    ");
      out.print( roleLabel(r) );
      out.write("\r\n");
      out.write("                                                </option>\r\n");
      out.write("                                                ");
 } 
      out.write("\r\n");
      out.write("                                            </select>\r\n");
      out.write("                                        </div>\r\n");
      out.write("                                        <div class=\"col-sm-2\">\r\n");
      out.write("                                            <label for=\"filterStatus\">Trạng thái</label>\r\n");
      out.write("                                            <select id=\"filterStatus\" name=\"status\" class=\"form-control\" style=\"width:100%\">\r\n");
      out.write("                                                <option value=\"\">Tất cả</option>\r\n");
      out.write("                                                <option value=\"active\" ");
      out.print( ("active".equalsIgnoreCase(pStatus)) ? "selected" : "" );
      out.write(">Hoạt động</option>\r\n");
      out.write("                                                <option value=\"inactive\" ");
      out.print( ("inactive".equalsIgnoreCase(pStatus)) ? "selected" : "" );
      out.write(">Tạm khóa</option>\r\n");
      out.write("                                            </select>\r\n");
      out.write("                                        </div>\r\n");
      out.write("                                    </div>\r\n");
      out.write("                                    <div class=\"row\" style=\"margin-bottom: 10px;\">\r\n");
      out.write("                                        <div class=\"col-sm-12\">\r\n");
      out.write("                                            <button type=\"submit\" class=\"btn btn-primary btn-sm\">\r\n");
      out.write("                                                <i class=\"fa fa-filter\"></i> Lọc\r\n");
      out.write("                                            </button>\r\n");
      out.write("                                            <a href=\"users.jsp\" class=\"btn btn-default btn-sm\">\r\n");
      out.write("                                                <i class=\"fa fa-times\"></i> Xóa lọc\r\n");
      out.write("                                            </a>\r\n");
      out.write("                                        </div>\r\n");
      out.write("                                    </div>\r\n");
      out.write("                                </form>\r\n");
      out.write("                                \r\n");
      out.write("                                <table class=\"table table-hover\" id=\"usersTable\">\r\n");
      out.write("                                    <thead>\r\n");
      out.write("                                        <tr>\r\n");
      out.write("                                            <th>ID</th>\r\n");
      out.write("                                            <th>Tên đăng nhập</th>\r\n");
      out.write("                                            <th>Email</th>\r\n");
      out.write("                                            <th>Họ tên</th>\r\n");
      out.write("                                            <th>Số điện thoại</th>\r\n");
      out.write("                                            <th>Vai trò</th>\r\n");
      out.write("                                            <th>Trạng thái</th>\r\n");
      out.write("                                            <th>Thao tác</th>\r\n");
      out.write("                                        </tr>\r\n");
      out.write("                                    </thead>\r\n");
      out.write("                                    <tbody id=\"usersTableBody\">\r\n");
      out.write("                                        ");
 for (com.hlgenerator.model.User user : filteredUsers) { 
      out.write("\r\n");
      out.write("                                        <tr>\r\n");
      out.write("                                            <td>");
      out.print( user.getId() );
      out.write("</td>\r\n");
      out.write("                                            <td>");
      out.print( user.getUsername() );
      out.write("</td>\r\n");
      out.write("                                            <td>");
      out.print( user.getEmail() );
      out.write("</td>\r\n");
      out.write("                                            <td>");
      out.print( user.getFullName() );
      out.write("</td>\r\n");
      out.write("                                            <td>");
      out.print( user.getPhone() != null ? user.getPhone() : "-" );
      out.write("</td>\r\n");
      out.write("                                            <td>");
      out.print( roleLabel(getUserRole(user)) );
      out.write("</td>\r\n");
      out.write("                                            <td>");
      out.print( statusLabel(user.isActive()) );
      out.write("</td>\r\n");
      out.write("                                            <td>\r\n");
      out.write("                                                <div class=\"action-buttons\">\r\n");
      out.write("                                                    <div class=\"btn-group\">\r\n");
      out.write("                                                        <!-- Nút Xem -->\r\n");
      out.write("                                                        <button class=\"btn btn-info btn-xs\" onclick=\"viewUser('");
      out.print( user.getId() );
      out.write("')\" title=\"Xem chi tiết\">\r\n");
      out.write("                                                            <i class=\"fa fa-eye\"></i> Xem\r\n");
      out.write("                                                        </button>\r\n");
      out.write("                                                        <!-- Nút Sửa với dropdown -->\r\n");
      out.write("                                                        <div class=\"btn-group\">\r\n");
      out.write("                                                            <button class=\"btn btn-warning btn-xs dropdown-toggle\" data-toggle=\"dropdown\" title=\"Chỉnh sửa\">\r\n");
      out.write("                                                                <i class=\"fa fa-edit\"></i> Sửa <span class=\"caret\"></span>\r\n");
      out.write("                                                            </button>\r\n");
      out.write("                                                            <ul class=\"dropdown-menu\">\r\n");
      out.write("                                                                <li><a href=\"#\" onclick=\"editUser('");
      out.print( user.getId() );
      out.write("')\"><i class=\"fa fa-edit\"></i> Chỉnh sửa thông tin</a></li>\r\n");
      out.write("                                                                <li><a href=\"#\" onclick=\"changePasswordUser('");
      out.print( user.getId() );
      out.write("')\"><i class=\"fa fa-key\"></i> Đổi mật khẩu</a></li>\r\n");
      out.write("                                                                <li class=\"divider\"></li>\r\n");
      out.write("                                                                ");
 if (user.isActive()) { 
      out.write("\r\n");
      out.write("                                                                    <li><a href=\"#\" onclick=\"deactivateUser('");
      out.print( user.getId() );
      out.write("')\" style=\"color: #f39c12;\"><i class=\"fa fa-lock\"></i> Tạm khóa</a></li>\r\n");
      out.write("                                                                ");
 } else { 
      out.write("\r\n");
      out.write("                                                                    <li><a href=\"#\" onclick=\"activateUser('");
      out.print( user.getId() );
      out.write("')\" style=\"color: #27ae60;\"><i class=\"fa fa-unlock\"></i> Kích hoạt</a></li>\r\n");
      out.write("                                                                ");
 } 
      out.write("\r\n");
      out.write("                                                                <li><a href=\"#\" onclick=\"hardDeleteUser('");
      out.print( user.getId() );
      out.write("')\" style=\"color: #e74c3c;\"><i class=\"fa fa-trash\"></i> Xóa vĩnh viễn</a></li>\r\n");
      out.write("                                                            </ul>\r\n");
      out.write("                                                        </div>\r\n");
      out.write("                                                        <!-- Nút Xóa -->\r\n");
      out.write("                                                        <button class=\"btn btn-danger btn-xs\" onclick=\"deleteUser('");
      out.print( user.getId() );
      out.write("')\" title=\"Xóa tạm thời\">\r\n");
      out.write("                                                            <i class=\"fa fa-trash-o\"></i> Xóa\r\n");
      out.write("                                                        </button>\r\n");
      out.write("                                                    </div>\r\n");
      out.write("                                                </div>\r\n");
      out.write("                                            </td>\r\n");
      out.write("                                        </tr>\r\n");
      out.write("                                        ");
 } 
      out.write("\r\n");
      out.write("                                    </tbody>\r\n");
      out.write("                                </table>\r\n");
      out.write("                            </div>\r\n");
      out.write("                        </div>\r\n");
      out.write("                    </div>\r\n");
      out.write("                </div>\r\n");
      out.write("            </section><!-- /.content -->\r\n");
      out.write("        </aside><!-- /.right-side -->\r\n");
      out.write("    </div><!-- ./wrapper -->\r\n");
      out.write("\r\n");
      out.write("    <!-- Modal thêm người dùng -->\r\n");
      out.write("    <div class=\"modal fade\" id=\"addUserModal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"addUserModalLabel\">\r\n");
      out.write("        <div class=\"modal-dialog modal-lg\" role=\"document\">\r\n");
      out.write("            <div class=\"modal-content\">\r\n");
      out.write("                <div class=\"modal-header\">\r\n");
      out.write("                    <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n");
      out.write("                        <span aria-hidden=\"true\">&times;</span>\r\n");
      out.write("                    </button>\r\n");
      out.write("                    <h4 class=\"modal-title\" id=\"addUserModalLabel\">Thêm người dùng mới</h4>\r\n");
      out.write("                </div>\r\n");
      out.write("                <div class=\"modal-body\">\r\n");
      out.write("                    <form id=\"addUserForm\">\r\n");
      out.write("                        <div class=\"row\">\r\n");
      out.write("                            <div class=\"col-md-6\">\r\n");
      out.write("                                <div class=\"form-group\">\r\n");
      out.write("                                    <label for=\"username\">Tên đăng nhập:</label>\r\n");
      out.write("                                    <input type=\"text\" class=\"form-control\" id=\"username\" required>\r\n");
      out.write("                                </div>\r\n");
      out.write("                                <div class=\"form-group\">\r\n");
      out.write("                                    <label for=\"email\">Email: <small class=\"text-muted\"></small></label>\r\n");
      out.write("                                    <input type=\"email\" class=\"form-control\" id=\"email\" placeholder=\"\" required>\r\n");
      out.write("                                </div>\r\n");
      out.write("                                <div class=\"form-group\">\r\n");
      out.write("                                    <label for=\"password\">Mật khẩu:</label>\r\n");
      out.write("                                    <input type=\"password\" class=\"form-control\" id=\"password\" required>\r\n");
      out.write("                                </div>\r\n");
      out.write("                                <div class=\"form-group\">\r\n");
      out.write("                                    <label for=\"fullName\">Họ và tên:</label>\r\n");
      out.write("                                    <input type=\"text\" class=\"form-control\" id=\"fullName\" required>\r\n");
      out.write("                                </div>\r\n");
      out.write("                            </div>\r\n");
      out.write("                            <div class=\"col-md-6\">\r\n");
      out.write("                                <div class=\"form-group\">\r\n");
      out.write("                                    <label for=\"phone\">Số điện thoại:</label>\r\n");
      out.write("                                    <input type=\"tel\" class=\"form-control\" id=\"phone\">\r\n");
      out.write("                                </div>\r\n");
      out.write("                                <div class=\"form-group\">\r\n");
      out.write("                                    <label for=\"role\">Vai trò:</label>\r\n");
      out.write("                                    <select class=\"form-control\" id=\"role\" required>\r\n");
      out.write("                                        <option value=\"\">Chọn vai trò</option>\r\n");
      out.write("                                        <option value=\"admin\">Quản trị viên</option>\r\n");
      out.write("                                        <option value=\"customer_support\">Hỗ trợ khách hàng</option>\r\n");
      out.write("                                        <option value=\"technical_staff\">Nhân viên kỹ thuật</option>\r\n");
      out.write("                                        <option value=\"head_technician\">Trưởng phòng kỹ thuật</option>\r\n");
      out.write("                                        <option value=\"storekeeper\">Thủ kho</option>\r\n");
      out.write("                                        <option value=\"customer\">Khách hàng</option>\r\n");
      out.write("                                        <option value=\"guest\">Khách</option>\r\n");
      out.write("                                    </select>\r\n");
      out.write("                                </div>\r\n");
      out.write("                                <div class=\"form-group\" id=\"customerSelectGroup\" style=\"display:none;\">\r\n");
      out.write("                                    <label for=\"customerId\">Khách hàng:</label>\r\n");
      out.write("                                    <select class=\"form-control\" id=\"customerId\">\r\n");
      out.write("                                        <option value=\"\">Chọn khách hàng</option>\r\n");
      out.write("                                    </select>\r\n");
      out.write("                                    <small class=\"text-muted\">Bắt buộc khi vai trò là Khách hàng</small>\r\n");
      out.write("                                </div>\r\n");
      out.write("                                <div class=\"form-group\">\r\n");
      out.write("                                    <label for=\"permissions\">Quyền hạn:</label>\r\n");
      out.write("                                    <textarea class=\"form-control\" id=\"permissions\" rows=\"3\" placeholder='[\"view_users\", \"manage_users\"]'></textarea>\r\n");
      out.write("                                </div>\r\n");
      out.write("                                <div class=\"form-group\">\r\n");
      out.write("                                    <label>\r\n");
      out.write("                                        <input type=\"checkbox\" id=\"isActive\" checked> Kích hoạt tài khoản (có thể đăng nhập ngay)\r\n");
      out.write("                                    </label>\r\n");
      out.write("                                    <small class=\"text-muted\">Tài khoản mới sẽ được kích hoạt tự động để có thể đăng nhập ngay lập tức</small>\r\n");
      out.write("                                </div>\r\n");
      out.write("                            </div>\r\n");
      out.write("                        </div>\r\n");
      out.write("                    </form>\r\n");
      out.write("                </div>\r\n");
      out.write("                <div class=\"modal-footer\">\r\n");
      out.write("                    <div class=\"pull-left\">\r\n");
      out.write("                        <small class=\"text-info\">\r\n");
      out.write("                            <i class=\"fa fa-info-circle\"></i> \r\n");
      out.write("                            Tài khoản mới sẽ được kích hoạt tự động và có thể đăng nhập ngay lập tức\r\n");
      out.write("                        </small>\r\n");
      out.write("                    </div>\r\n");
      out.write("                    <button type=\"button\" class=\"btn btn-default\" data-dismiss=\"modal\">Hủy</button>\r\n");
      out.write("                    <button type=\"button\" class=\"btn btn-primary\" onclick=\"saveUser()\">Lưu người dùng</button>\r\n");
      out.write("                </div>\r\n");
      out.write("            </div>\r\n");
      out.write("        </div>\r\n");
      out.write("    </div>\r\n");
      out.write("\r\n");
      out.write("    <!-- Modal xem chi tiết người dùng -->\r\n");
      out.write("    <div class=\"modal fade\" id=\"userDetailModal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"userDetailModalLabel\">\r\n");
      out.write("        <div class=\"modal-dialog modal-lg\" role=\"document\">\r\n");
      out.write("            <div class=\"modal-content\">\r\n");
      out.write("                <div class=\"modal-header\">\r\n");
      out.write("                    <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n");
      out.write("                        <span aria-hidden=\"true\">&times;</span>\r\n");
      out.write("                    </button>\r\n");
      out.write("                    <h4 class=\"modal-title\" id=\"userDetailModalLabel\">Chi tiết người dùng</h4>\r\n");
      out.write("                </div>\r\n");
      out.write("                <div class=\"modal-body\">\r\n");
      out.write("                    <div class=\"row\">\r\n");
      out.write("                        <div class=\"col-md-6\">\r\n");
      out.write("                            <h5>Thông tin cơ bản</h5>\r\n");
      out.write("                            <p><strong>ID:</strong> <span id=\"detailUserId\"></span></p>\r\n");
      out.write("                            <p><strong>Tên đăng nhập:</strong> <span id=\"detailUsername\"></span></p>\r\n");
      out.write("                            <p><strong>Email:</strong> <span id=\"detailEmail\"></span></p>\r\n");
      out.write("                            <p><strong>Họ và tên:</strong> <span id=\"detailFullName\"></span></p>\r\n");
      out.write("                            <p><strong>Số điện thoại:</strong> <span id=\"detailPhone\"></span></p>\r\n");
      out.write("                        </div>\r\n");
      out.write("                        <div class=\"col-md-6\">\r\n");
      out.write("                            <h5>Thông tin hệ thống</h5>\r\n");
      out.write("                            <p><strong>Vai trò:</strong> <span id=\"detailRole\"></span></p>\r\n");
      out.write("                            <p><strong>Quyền hạn:</strong> <span id=\"detailPermissions\"></span></p>\r\n");
      out.write("                            <p><strong>Trạng thái:</strong> <span id=\"detailStatus\"></span></p>\r\n");
      out.write("                            <p><strong>Ngày tạo:</strong> <span id=\"detailCreatedAt\"></span></p>\r\n");
      out.write("                            <p><strong>Cập nhật lần cuối:</strong> <span id=\"detailUpdatedAt\"></span></p>\r\n");
      out.write("                        </div>\r\n");
      out.write("                    </div>\r\n");
      out.write("                </div>\r\n");
      out.write("                <div class=\"modal-footer\">\r\n");
      out.write("                    <button type=\"button\" class=\"btn btn-default\" data-dismiss=\"modal\">Đóng</button>\r\n");
      out.write("                </div>\r\n");
      out.write("            </div>\r\n");
      out.write("        </div>\r\n");
      out.write("    </div>\r\n");
      out.write("\r\n");
      out.write("    <!-- Modal đổi mật khẩu -->\r\n");
      out.write("    <div class=\"modal fade\" id=\"changePasswordModal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"changePasswordModalLabel\">\r\n");
      out.write("        <div class=\"modal-dialog\" role=\"document\">\r\n");
      out.write("            <div class=\"modal-content\">\r\n");
      out.write("                <div class=\"modal-header\">\r\n");
      out.write("                    <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n");
      out.write("                        <span aria-hidden=\"true\">&times;</span>\r\n");
      out.write("                    </button>\r\n");
      out.write("                    <h4 class=\"modal-title\" id=\"changePasswordModalLabel\">Đổi mật khẩu</h4>\r\n");
      out.write("                </div>\r\n");
      out.write("                <div class=\"modal-body\">\r\n");
      out.write("                    <form id=\"changePasswordForm\">\r\n");
      out.write("                        <div class=\"form-group\">\r\n");
      out.write("                            <label for=\"newPassword\">Mật khẩu mới:</label>\r\n");
      out.write("                            <input type=\"password\" class=\"form-control\" id=\"newPassword\" required>\r\n");
      out.write("                        </div>\r\n");
      out.write("                        <div class=\"form-group\">\r\n");
      out.write("                            <label for=\"confirmPassword\">Xác nhận mật khẩu:</label>\r\n");
      out.write("                            <input type=\"password\" class=\"form-control\" id=\"confirmPassword\" required>\r\n");
      out.write("                        </div>\r\n");
      out.write("                    </form>\r\n");
      out.write("                </div>\r\n");
      out.write("                <div class=\"modal-footer\">\r\n");
      out.write("                    <button type=\"button\" class=\"btn btn-default\" data-dismiss=\"modal\">Hủy</button>\r\n");
      out.write("                    <button type=\"button\" class=\"btn btn-primary\" onclick=\"changePassword()\">Đổi mật khẩu</button>\r\n");
      out.write("                </div>\r\n");
      out.write("            </div>\r\n");
      out.write("        </div>\r\n");
      out.write("    </div>\r\n");
      out.write("\r\n");
      out.write("    <!-- jQuery 2.0.2 -->\r\n");
      out.write("    <script src=\"http://ajax.googleapis.com/ajax/libs/jquery/2.0.2/jquery.min.js\"></script>\r\n");
      out.write("    <script src=\"js/jquery.min.js\" type=\"text/javascript\"></script>\r\n");
      out.write("    <!-- jQuery UI 1.10.3 -->\r\n");
      out.write("    <script src=\"js/jquery-ui-1.10.3.min.js\" type=\"text/javascript\"></script>\r\n");
      out.write("    <!-- Bootstrap -->\r\n");
      out.write("    <script src=\"js/bootstrap.min.js\" type=\"text/javascript\"></script>\r\n");
      out.write("    <!-- DataTables -->\r\n");
      out.write("    <script src=\"js/plugins/datatables/jquery.dataTables.js\" type=\"text/javascript\"></script>\r\n");
      out.write("    <script src=\"js/plugins/datatables/dataTables.bootstrap.js\" type=\"text/javascript\"></script>\r\n");
      out.write("    <!-- Director App -->\r\n");
      out.write("    <script src=\"js/Director/app.js\" type=\"text/javascript\"></script>\r\n");
      out.write("\r\n");
      out.write("    <script type=\"text/javascript\">\r\n");
      out.write("        var usersTable;\r\n");
      out.write("        var currentEditingUser = null;\r\n");
      out.write("        var currentPasswordUserId = null;\r\n");
      out.write("\r\n");
      out.write("        $(document).ready(function() {\r\n");
      out.write("            // Initialize DataTable with pagination - sử dụng dữ liệu tĩnh từ JSP\r\n");
      out.write("            usersTable = $('#usersTable').DataTable({\r\n");
      out.write("                \"language\": {\r\n");
      out.write("                    \"url\": \"//cdn.datatables.net/plug-ins/1.10.25/i18n/Vietnamese.json\"\r\n");
      out.write("                },\r\n");
      out.write("                \"processing\": false,\r\n");
      out.write("                \"serverSide\": false,\r\n");
      out.write("                \"paging\": true,\r\n");
      out.write("                \"pageLength\": 10,\r\n");
      out.write("                \"lengthMenu\": [[5, 10, 25, 50, -1], [5, 10, 25, 50, \"Tất cả\"]],\r\n");
      out.write("                \"searching\": true,\r\n");
      out.write("                \"ordering\": true,\r\n");
      out.write("                \"info\": true,\r\n");
      out.write("                \"autoWidth\": false,\r\n");
      out.write("                \"responsive\": true,\r\n");
      out.write("                \"dom\": '<\"row\"<\"col-sm-6\"l><\"col-sm-6\"f>>' +\r\n");
      out.write("                       '<\"row\"<\"col-sm-12\"tr>>' +\r\n");
      out.write("                       '<\"row\"<\"col-sm-5\"i><\"col-sm-7\"p>>',\r\n");
      out.write("                \"order\": [[0, \"desc\"]],\r\n");
      out.write("                \"columnDefs\": [\r\n");
      out.write("                    {\r\n");
      out.write("                        \"targets\": [7], // Cột thao tác\r\n");
      out.write("                        \"orderable\": false,\r\n");
      out.write("                        \"searchable\": false\r\n");
      out.write("                    }\r\n");
      out.write("                ]\r\n");
      out.write("            });\r\n");
      out.write("\r\n");
      out.write("            // Toggle customer selector when role changes\r\n");
      out.write("            $('#role').on('change', function() {\r\n");
      out.write("                var val = $(this).val();\r\n");
      out.write("                if (val === 'customer') {\r\n");
      out.write("                    $('#customerSelectGroup').show();\r\n");
      out.write("                    ensureCustomersLoaded();\r\n");
      out.write("                } else {\r\n");
      out.write("                    $('#customerSelectGroup').hide();\r\n");
      out.write("                    $('#customerId').val('');\r\n");
      out.write("                    // Clear customer info when not customer role\r\n");
      out.write("                    clearCustomerInfo();\r\n");
      out.write("                }\r\n");
      out.write("            });\r\n");
      out.write("\r\n");
      out.write("            // Auto-fill customer info when customer is selected\r\n");
      out.write("            $('#customerId').on('change', function() {\r\n");
      out.write("                var customerId = $(this).val();\r\n");
      out.write("                if (customerId && $('#role').val() === 'customer') {\r\n");
      out.write("                    loadCustomerInfo(customerId);\r\n");
      out.write("                } else if (!customerId) {\r\n");
      out.write("                    unlockCustomerFields();\r\n");
      out.write("                }\r\n");
      out.write("            });\r\n");
      out.write("        });\r\n");
      out.write("\r\n");
      out.write("        var customersLoaded = false;\r\n");
      out.write("        var customersData = {};\r\n");
      out.write("        \r\n");
      out.write("        // Load danh sách khách hàng từ API\r\n");
      out.write("        function ensureCustomersLoaded() {\r\n");
      out.write("            if (customersLoaded) return;\r\n");
      out.write("            \r\n");
      out.write("            $.ajax({\r\n");
      out.write("                url: 'api/customers?action=list',\r\n");
      out.write("                type: 'GET',\r\n");
      out.write("                dataType: 'json',\r\n");
      out.write("                success: function(response) {\r\n");
      out.write("                    if (response.success) {\r\n");
      out.write("                        var customers = response.data || [];\r\n");
      out.write("                        var $sel = $('#customerId');\r\n");
      out.write("                        $sel.empty().append('<option value=\"\">Chọn khách hàng</option>');\r\n");
      out.write("                        \r\n");
      out.write("                        customers.forEach(function(c) {\r\n");
      out.write("                            var name = (c.companyName && c.companyName.trim()) \r\n");
      out.write("                                ? c.companyName \r\n");
      out.write("                                : (c.contactPerson || 'KH #' + c.id);\r\n");
      out.write("                            var displayText = name + ' - ' + (c.email || '');\r\n");
      out.write("                            $sel.append('<option value=\"' + c.id + '\">' + displayText + '</option>');\r\n");
      out.write("                            customersData[c.id] = c;\r\n");
      out.write("                        });\r\n");
      out.write("                        \r\n");
      out.write("                        customersLoaded = true;\r\n");
      out.write("                    }\r\n");
      out.write("                },\r\n");
      out.write("                error: function() {\r\n");
      out.write("                    console.error('Lỗi khi tải danh sách khách hàng');\r\n");
      out.write("                }\r\n");
      out.write("            });\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        // Khóa các trường thông tin khách hàng (không cho phép sửa)\r\n");
      out.write("        function lockCustomerFields() {\r\n");
      out.write("            $('#email, #fullName, #phone').prop('readonly', true).addClass('bg-gray-light');\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        // Mở khóa các trường thông tin khách hàng\r\n");
      out.write("        function unlockCustomerFields() {\r\n");
      out.write("            $('#email, #fullName, #phone').prop('readonly', false).removeClass('bg-gray-light');\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        // Điền thông tin khách hàng vào form\r\n");
      out.write("        function loadCustomerInfo(customerId) {\r\n");
      out.write("            var customer = customersData[customerId];\r\n");
      out.write("            if (customer) {\r\n");
      out.write("                $('#email').val(customer.email || '');\r\n");
      out.write("                $('#fullName').val(customer.contactPerson || '');\r\n");
      out.write("                $('#phone').val(customer.phone || '');\r\n");
      out.write("                lockCustomerFields();\r\n");
      out.write("                showAlert('Đã tự động điền thông tin từ khách hàng được chọn. Các trường này không thể chỉnh sửa.', 'success');\r\n");
      out.write("            }\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        // Xóa thông tin khách hàng khỏi form\r\n");
      out.write("        function clearCustomerInfo() {\r\n");
      out.write("            unlockCustomerFields();\r\n");
      out.write("            if (!currentEditingUser) {\r\n");
      out.write("                $('#email, #fullName, #phone').val('');\r\n");
      out.write("            }\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        // Refresh bảng dữ liệu\r\n");
      out.write("        function refreshTable() {\r\n");
      out.write("            if (usersTable) {\r\n");
      out.write("                usersTable.draw();\r\n");
      out.write("            }\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        // Chuyển vai trò sang label HTML với màu sắc\r\n");
      out.write("        function getRoleLabel(role) {\r\n");
      out.write("            var roleLabels = {\r\n");
      out.write("                'admin': '<span class=\"label label-danger\">Quản trị viên</span>',\r\n");
      out.write("                'customer_support': '<span class=\"label label-info\">Hỗ trợ khách hàng</span>',\r\n");
      out.write("                'technical_staff': '<span class=\"label label-primary\">Nhân viên kỹ thuật</span>',\r\n");
      out.write("                'head_technician': '<span class=\"label label-warning\">Trưởng phòng kỹ thuật</span>',\r\n");
      out.write("                'storekeeper': '<span class=\"label label-success\">Thủ kho</span>',\r\n");
      out.write("                'customer': '<span class=\"label label-default\">Khách hàng</span>',\r\n");
      out.write("                'guest': '<span class=\"label label-default\">Khách</span>'\r\n");
      out.write("            };\r\n");
      out.write("            return roleLabels[role] || '<span class=\"label label-default\">' + role + '</span>';\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        // Chuyển trạng thái sang label HTML\r\n");
      out.write("        function getStatusLabel(isActive) {\r\n");
      out.write("            return isActive \r\n");
      out.write("                ? '<span class=\"label label-success\">Hoạt động</span>' \r\n");
      out.write("                : '<span class=\"label label-warning\">Tạm khóa</span>';\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        // Format ngày giờ sang định dạng Việt Nam\r\n");
      out.write("        function formatDate(dateString) {\r\n");
      out.write("            if (!dateString) return '-';\r\n");
      out.write("            var date = new Date(dateString);\r\n");
      out.write("            return date.toLocaleDateString('vi-VN') + ' ' + date.toLocaleTimeString('vi-VN');\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        // Xem chi tiết người dùng\r\n");
      out.write("        function viewUser(id) {\r\n");
      out.write("            $.ajax({\r\n");
      out.write("                url: 'api/users?action=get&id=' + id,\r\n");
      out.write("                type: 'GET',\r\n");
      out.write("                dataType: 'json',\r\n");
      out.write("                success: function(response) {\r\n");
      out.write("                    if (response.success) {\r\n");
      out.write("                        var user = response.data;\r\n");
      out.write("                        populateUserDetail(user);\r\n");
      out.write("                        $('#userDetailModal').modal('show');\r\n");
      out.write("                    } else {\r\n");
      out.write("                        showAlert('Không thể tải thông tin người dùng: ' + response.message, 'danger');\r\n");
      out.write("                    }\r\n");
      out.write("                },\r\n");
      out.write("                error: function(xhr, status, error) {\r\n");
      out.write("                    console.error('AJAX Error:', xhr.responseText);\r\n");
      out.write("                    showAlert('Lỗi kết nối đến server: ' + error, 'danger');\r\n");
      out.write("                }\r\n");
      out.write("            });\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        // Điền thông tin người dùng vào modal xem chi tiết\r\n");
      out.write("        function populateUserDetail(user) {\r\n");
      out.write("            $('#detailUserId').text(user.id);\r\n");
      out.write("            $('#detailUsername').text(user.username);\r\n");
      out.write("            $('#detailEmail').text(user.email);\r\n");
      out.write("            $('#detailFullName').text(user.fullName);\r\n");
      out.write("            $('#detailPhone').text(user.phone || '-');\r\n");
      out.write("            $('#detailRole').html(getRoleLabel(user.role));\r\n");
      out.write("            $('#detailPermissions').text(user.permissions || '[]');\r\n");
      out.write("            $('#detailStatus').html(getStatusLabel(user.isActive));\r\n");
      out.write("            $('#detailCreatedAt').text(formatDate(user.createdAt));\r\n");
      out.write("            $('#detailUpdatedAt').text(formatDate(user.updatedAt));\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        // Chỉnh sửa người dùng\r\n");
      out.write("        function editUser(id) {\r\n");
      out.write("            $.ajax({\r\n");
      out.write("                url: 'api/users?action=get&id=' + id,\r\n");
      out.write("                type: 'GET',\r\n");
      out.write("                dataType: 'json',\r\n");
      out.write("                success: function(response) {\r\n");
      out.write("                    if (response.success) {\r\n");
      out.write("                        var user = response.data;\r\n");
      out.write("                        populateEditForm(user);\r\n");
      out.write("                        currentEditingUser = user;\r\n");
      out.write("                        $('#addUserModal').modal('show');\r\n");
      out.write("                        $('#addUserModalLabel').text('Chỉnh sửa người dùng');\r\n");
      out.write("                    } else {\r\n");
      out.write("                        showAlert('Không thể tải thông tin người dùng: ' + response.message, 'danger');\r\n");
      out.write("                    }\r\n");
      out.write("                },\r\n");
      out.write("                error: function(xhr, status, error) {\r\n");
      out.write("                    console.error('AJAX Error:', xhr.responseText);\r\n");
      out.write("                    showAlert('Lỗi kết nối đến server: ' + error, 'danger');\r\n");
      out.write("                }\r\n");
      out.write("            });\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        // Điền dữ liệu vào form chỉnh sửa\r\n");
      out.write("        function populateEditForm(user) {\r\n");
      out.write("            $('#username').val(user.username);\r\n");
      out.write("            $('#email').val(user.email);\r\n");
      out.write("            $('#password').val('').prop('required', false);\r\n");
      out.write("            $('#fullName').val(user.fullName);\r\n");
      out.write("            $('#phone').val(user.phone || '');\r\n");
      out.write("            $('#role').val(user.role);\r\n");
      out.write("            $('#permissions').val(user.permissions || '[]');\r\n");
      out.write("            $('#isActive').prop('checked', user.isActive);\r\n");
      out.write("            \r\n");
      out.write("            // Xử lý khi vai trò là khách hàng\r\n");
      out.write("            if (user.role === 'customer') {\r\n");
      out.write("                $('#customerSelectGroup').show();\r\n");
      out.write("                ensureCustomersLoaded();\r\n");
      out.write("                setTimeout(function(){\r\n");
      out.write("                    if (user.customerId) {\r\n");
      out.write("                        $('#customerId').val(String(user.customerId));\r\n");
      out.write("                        lockCustomerFields();\r\n");
      out.write("                    }\r\n");
      out.write("                }, 200);\r\n");
      out.write("            } else {\r\n");
      out.write("                $('#customerSelectGroup').hide();\r\n");
      out.write("                $('#customerId').val('');\r\n");
      out.write("                unlockCustomerFields();\r\n");
      out.write("            }\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        // Mở modal đổi mật khẩu\r\n");
      out.write("        function changePasswordUser(id) {\r\n");
      out.write("            currentPasswordUserId = id;\r\n");
      out.write("            $('#changePasswordModal').modal('show');\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        // Đổi mật khẩu người dùng\r\n");
      out.write("        function changePassword() {\r\n");
      out.write("            var newPassword = $('#newPassword').val();\r\n");
      out.write("            var confirmPassword = $('#confirmPassword').val();\r\n");
      out.write("\r\n");
      out.write("            if (!newPassword || !confirmPassword) {\r\n");
      out.write("                showAlert('Vui lòng điền đầy đủ thông tin', 'warning');\r\n");
      out.write("                return;\r\n");
      out.write("            }\r\n");
      out.write("\r\n");
      out.write("            if (newPassword !== confirmPassword) {\r\n");
      out.write("                showAlert('Mật khẩu xác nhận không khớp', 'warning');\r\n");
      out.write("                return;\r\n");
      out.write("            }\r\n");
      out.write("\r\n");
      out.write("            $.ajax({\r\n");
      out.write("                url: 'api/users',\r\n");
      out.write("                type: 'POST',\r\n");
      out.write("                data: {\r\n");
      out.write("                    action: 'changePassword',\r\n");
      out.write("                    id: currentPasswordUserId,\r\n");
      out.write("                    newPassword: newPassword\r\n");
      out.write("                },\r\n");
      out.write("                dataType: 'json',\r\n");
      out.write("                success: function(response) {\r\n");
      out.write("                    if (response.success) {\r\n");
      out.write("                        showAlert('Đã đổi mật khẩu thành công', 'success');\r\n");
      out.write("                        $('#changePasswordModal').modal('hide');\r\n");
      out.write("                        document.getElementById('changePasswordForm').reset();\r\n");
      out.write("                        currentPasswordUserId = null;\r\n");
      out.write("                    } else {\r\n");
      out.write("                        showAlert('Lỗi: ' + response.message, 'danger');\r\n");
      out.write("                    }\r\n");
      out.write("                },\r\n");
      out.write("                error: function(xhr, status, error) {\r\n");
      out.write("                    console.error('AJAX Error:', xhr.responseText);\r\n");
      out.write("                    showAlert('Lỗi kết nối đến server: ' + error, 'danger');\r\n");
      out.write("                }\r\n");
      out.write("            });\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        // Xóa mềm người dùng (tạm khóa)\r\n");
      out.write("        function deleteUser(id) {\r\n");
      out.write("            if (confirm('Bạn có chắc chắn muốn tạm khóa người dùng này?\\n\\nLưu ý: Đây là xóa mềm, người dùng sẽ bị tạm khóa nhưng dữ liệu vẫn được giữ lại.')) {\r\n");
      out.write("                $.ajax({\r\n");
      out.write("                    url: 'api/users',\r\n");
      out.write("                    type: 'POST',\r\n");
      out.write("                    data: {\r\n");
      out.write("                        action: 'delete',\r\n");
      out.write("                        id: id\r\n");
      out.write("                    },\r\n");
      out.write("                    dataType: 'json',\r\n");
      out.write("                    success: function(response) {\r\n");
      out.write("                        if (response.success) {\r\n");
      out.write("                            showAlert('Đã tạm khóa người dùng thành công', 'success');\r\n");
      out.write("                            location.reload(); // Reload trang để cập nhật dữ liệu\r\n");
      out.write("                        } else {\r\n");
      out.write("                            showAlert('Lỗi khi tạm khóa người dùng: ' + response.message, 'danger');\r\n");
      out.write("                        }\r\n");
      out.write("                    },\r\n");
      out.write("                    error: function(xhr, status, error) {\r\n");
      out.write("                        console.error('AJAX Error:', xhr.responseText);\r\n");
      out.write("                        showAlert('Lỗi kết nối đến server: ' + error, 'danger');\r\n");
      out.write("                    }\r\n");
      out.write("                });\r\n");
      out.write("            }\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        // Xóa cứng người dùng (xóa vĩnh viễn)\r\n");
      out.write("        function hardDeleteUser(id) {\r\n");
      out.write("            if (confirm('⚠️ CẢNH BÁO: Bạn có chắc chắn muốn XÓA VĨNH VIỄN người dùng này?\\n\\n' +\r\n");
      out.write("                       'Hành động này KHÔNG THỂ HOÀN TÁC!\\n' +\r\n");
      out.write("                       'Tất cả dữ liệu liên quan đến người dùng này sẽ bị xóa vĩnh viễn.\\n\\n' +\r\n");
      out.write("                       'Nhập \"XÓA\" để xác nhận:')) {\r\n");
      out.write("                \r\n");
      out.write("                var confirmation = prompt('Nhập \"XÓA\" để xác nhận xóa vĩnh viễn:');\r\n");
      out.write("                if (confirmation === 'XÓA') {\r\n");
      out.write("                    $.ajax({\r\n");
      out.write("                        url: 'api/users',\r\n");
      out.write("                        type: 'POST',\r\n");
      out.write("                        data: {\r\n");
      out.write("                            action: 'hardDelete',\r\n");
      out.write("                            id: id\r\n");
      out.write("                        },\r\n");
      out.write("                        dataType: 'json',\r\n");
      out.write("                        success: function(response) {\r\n");
      out.write("                            if (response.success) {\r\n");
      out.write("                                showAlert('Đã xóa vĩnh viễn người dùng thành công', 'success');\r\n");
      out.write("                                location.reload(); // Reload trang để cập nhật dữ liệu\r\n");
      out.write("                            } else {\r\n");
      out.write("                                showAlert('Lỗi khi xóa vĩnh viễn người dùng: ' + response.message, 'danger');\r\n");
      out.write("                            }\r\n");
      out.write("                        },\r\n");
      out.write("                        error: function(xhr, status, error) {\r\n");
      out.write("                            console.error('AJAX Error:', xhr.responseText);\r\n");
      out.write("                            showAlert('Lỗi kết nối đến server: ' + error, 'danger');\r\n");
      out.write("                        }\r\n");
      out.write("                    });\r\n");
      out.write("                } else {\r\n");
      out.write("                    showAlert('Hủy bỏ xóa vĩnh viễn', 'info');\r\n");
      out.write("                }\r\n");
      out.write("            }\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        // Tạm khóa người dùng\r\n");
      out.write("        function deactivateUser(id) {\r\n");
      out.write("            if (confirm('Bạn có chắc chắn muốn tạm khóa người dùng này?')) {\r\n");
      out.write("                $.ajax({\r\n");
      out.write("                    url: 'api/users',\r\n");
      out.write("                    type: 'POST',\r\n");
      out.write("                    data: {\r\n");
      out.write("                        action: 'deactivate',\r\n");
      out.write("                        id: id\r\n");
      out.write("                    },\r\n");
      out.write("                    dataType: 'json',\r\n");
      out.write("                    success: function(response) {\r\n");
      out.write("                        if (response.success) {\r\n");
      out.write("                            showAlert('Đã tạm khóa người dùng thành công', 'success');\r\n");
      out.write("                            location.reload(); // Reload trang để cập nhật dữ liệu\r\n");
      out.write("                        } else {\r\n");
      out.write("                            showAlert('Lỗi khi tạm khóa người dùng: ' + response.message, 'danger');\r\n");
      out.write("                        }\r\n");
      out.write("                    },\r\n");
      out.write("                    error: function(xhr, status, error) {\r\n");
      out.write("                        console.error('AJAX Error:', xhr.responseText);\r\n");
      out.write("                        showAlert('Lỗi kết nối đến server: ' + error, 'danger');\r\n");
      out.write("                    }\r\n");
      out.write("                });\r\n");
      out.write("            }\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        // Kích hoạt người dùng\r\n");
      out.write("        function activateUser(id) {\r\n");
      out.write("            if (confirm('Bạn có chắc chắn muốn kích hoạt người dùng này?')) {\r\n");
      out.write("                $.ajax({\r\n");
      out.write("                    url: 'api/users',\r\n");
      out.write("                    type: 'POST',\r\n");
      out.write("                    data: {\r\n");
      out.write("                        action: 'activate',\r\n");
      out.write("                        id: id\r\n");
      out.write("                    },\r\n");
      out.write("                    dataType: 'json',\r\n");
      out.write("                    success: function(response) {\r\n");
      out.write("                        if (response.success) {\r\n");
      out.write("                            showAlert('Đã kích hoạt người dùng thành công', 'success');\r\n");
      out.write("                            location.reload(); // Reload trang để cập nhật dữ liệu\r\n");
      out.write("                        } else {\r\n");
      out.write("                            showAlert('Lỗi khi kích hoạt người dùng: ' + response.message, 'danger');\r\n");
      out.write("                        }\r\n");
      out.write("                    },\r\n");
      out.write("                    error: function(xhr, status, error) {\r\n");
      out.write("                        console.error('AJAX Error:', xhr.responseText);\r\n");
      out.write("                        showAlert('Lỗi kết nối đến server: ' + error, 'danger');\r\n");
      out.write("                    }\r\n");
      out.write("                });\r\n");
      out.write("            }\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        // Lưu người dùng (thêm mới hoặc cập nhật)\r\n");
      out.write("        function saveUser() {\r\n");
      out.write("            var username = $('#username').val();\r\n");
      out.write("            var email = $('#email').val();\r\n");
      out.write("            var password = $('#password').val();\r\n");
      out.write("            var fullName = $('#fullName').val();\r\n");
      out.write("            var phone = $('#phone').val();\r\n");
      out.write("            var role = $('#role').val();\r\n");
      out.write("            var customerId = $('#customerId').val();\r\n");
      out.write("            var permissions = $('#permissions').val();\r\n");
      out.write("            var isActive = $('#isActive').is(':checked');\r\n");
      out.write("\r\n");
      out.write("            if (!username || !email || !fullName || !role) {\r\n");
      out.write("                showAlert('Vui lòng điền đầy đủ thông tin bắt buộc', 'warning');\r\n");
      out.write("                return;\r\n");
      out.write("            }\r\n");
      out.write("\r\n");
      out.write("            // Email phải là @gmail.com hoặc @fpt.edu.vn\r\n");
      out.write("            var emailRegex = /^[A-Za-z0-9._%+-]+@(gmail\\.com|fpt\\.edu\\.vn)$/i;\r\n");
      out.write("            if (!emailRegex.test((email || '').trim())) {\r\n");
      out.write("                showAlert('Email phải có định dạng @gmail.com hoặc @fpt.edu.vn', 'warning');\r\n");
      out.write("                document.getElementById('email').focus();\r\n");
      out.write("                return;\r\n");
      out.write("            }\r\n");
      out.write("\r\n");
      out.write("            // Số điện thoại bắt buộc: 10 hoặc 11 chữ số\r\n");
      out.write("            var phoneRegex = /^\\d{10,11}$/;\r\n");
      out.write("            if (!phone || !phoneRegex.test(phone.trim())) {\r\n");
      out.write("                showAlert('Số điện thoại phải gồm 10 hoặc 11 chữ số', 'warning');\r\n");
      out.write("                document.getElementById('phone').focus();\r\n");
      out.write("                return;\r\n");
      out.write("            }\r\n");
      out.write("\r\n");
      out.write("            // For new user, password is required\r\n");
      out.write("            if (!currentEditingUser && !password) {\r\n");
      out.write("                showAlert('Mật khẩu là bắt buộc cho người dùng mới', 'warning');\r\n");
      out.write("                return;\r\n");
      out.write("            }\r\n");
      out.write("\r\n");
      out.write("            // Require customer selection for role 'customer'\r\n");
      out.write("            if (role === 'customer') {\r\n");
      out.write("                if (!customerId) {\r\n");
      out.write("                    showAlert('Vui lòng chọn khách hàng cho tài khoản vai trò Khách hàng', 'warning');\r\n");
      out.write("                    $('#customerId').focus();\r\n");
      out.write("                    return;\r\n");
      out.write("                }\r\n");
      out.write("            }\r\n");
      out.write("\r\n");
      out.write("            var formData = {\r\n");
      out.write("                username: username,\r\n");
      out.write("                email: email,\r\n");
      out.write("                fullName: fullName,\r\n");
      out.write("                phone: phone,\r\n");
      out.write("                role: role,\r\n");
      out.write("                permissions: permissions || '[]',\r\n");
      out.write("                isActive: isActive\r\n");
      out.write("            };\r\n");
      out.write("\r\n");
      out.write("            if (role === 'customer') {\r\n");
      out.write("                formData.customerId = customerId;\r\n");
      out.write("            }\r\n");
      out.write("\r\n");
      out.write("            // Only include password for new users\r\n");
      out.write("            if (!currentEditingUser) {\r\n");
      out.write("                formData.password = password;\r\n");
      out.write("                // Đảm bảo tài khoản mới được kích hoạt để có thể đăng nhập ngay\r\n");
      out.write("                formData.isActive = true;\r\n");
      out.write("            }\r\n");
      out.write("\r\n");
      out.write("            var url = 'api/users';\r\n");
      out.write("            var action = currentEditingUser ? 'update' : 'add';\r\n");
      out.write("            formData.action = action;\r\n");
      out.write("            \r\n");
      out.write("            if (currentEditingUser) {\r\n");
      out.write("                formData.id = currentEditingUser.id;\r\n");
      out.write("            }\r\n");
      out.write("\r\n");
      out.write("            $.ajax({\r\n");
      out.write("                url: url,\r\n");
      out.write("                type: 'POST',\r\n");
      out.write("                data: formData,\r\n");
      out.write("                dataType: 'json',\r\n");
      out.write("                success: function(response) {\r\n");
      out.write("                    if (response.success) {\r\n");
      out.write("                        if (!currentEditingUser) {\r\n");
      out.write("                            showAlert('Tạo người dùng thành công! Tài khoản đã được kích hoạt và có thể đăng nhập ngay lập tức.', 'success');\r\n");
      out.write("                        } else {\r\n");
      out.write("                            showAlert(response.message, 'success');\r\n");
      out.write("                        }\r\n");
      out.write("                        $('#addUserModal').modal('hide');\r\n");
      out.write("                        document.getElementById('addUserForm').reset();\r\n");
      out.write("                        currentEditingUser = null;\r\n");
      out.write("                        $('#addUserModalLabel').text('Thêm người dùng mới');\r\n");
      out.write("                        location.reload(); // Reload trang để cập nhật dữ liệu\r\n");
      out.write("                    } else {\r\n");
      out.write("                        showAlert('Lỗi: ' + response.message, 'danger');\r\n");
      out.write("                    }\r\n");
      out.write("                },\r\n");
      out.write("                error: function(xhr, status, error) {\r\n");
      out.write("                    console.error('AJAX Error:', xhr.responseText);\r\n");
      out.write("                    showAlert('Lỗi kết nối đến server: ' + error, 'danger');\r\n");
      out.write("                }\r\n");
      out.write("            });\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        // Hiển thị thông báo cho người dùng\r\n");
      out.write("        function showAlert(message, type) {\r\n");
      out.write("            var alertClass = 'alert-' + type;\r\n");
      out.write("            var alertHtml = '<div class=\"alert ' + alertClass + ' alert-dismissible fade in\" role=\"alert\">' +\r\n");
      out.write("                           '<button type=\"button\" class=\"close\" data-dismiss=\"alert\" aria-label=\"Close\">' +\r\n");
      out.write("                           '<span aria-hidden=\"true\">&times;</span></button>' +\r\n");
      out.write("                           message + '</div>';\r\n");
      out.write("            \r\n");
      out.write("            // Remove existing alerts\r\n");
      out.write("            $('.alert').remove();\r\n");
      out.write("            \r\n");
      out.write("            // Try to find the best container for the alert\r\n");
      out.write("            var container = $('.content');\r\n");
      out.write("            if (container.length === 0) {\r\n");
      out.write("                container = $('.panel');\r\n");
      out.write("            }\r\n");
      out.write("            if (container.length === 0) {\r\n");
      out.write("                container = $('body');\r\n");
      out.write("            }\r\n");
      out.write("            \r\n");
      out.write("            \r\n");
      out.write("            // Add new alert\r\n");
      out.write("            container.prepend(alertHtml);\r\n");
      out.write("            \r\n");
      out.write("            // Auto remove after 3 seconds\r\n");
      out.write("            setTimeout(function() {\r\n");
      out.write("                $('.alert').fadeOut(500, function() {\r\n");
      out.write("                    $(this).remove();\r\n");
      out.write("                });\r\n");
      out.write("            }, 5000);\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        // Reset form khi đóng modal\r\n");
      out.write("        $('#addUserModal').on('hidden.bs.modal', function() {\r\n");
      out.write("            document.getElementById('addUserForm').reset();\r\n");
      out.write("            document.getElementById('password').required = true;\r\n");
      out.write("            currentEditingUser = null;\r\n");
      out.write("            $('#addUserModalLabel').text('Thêm người dùng mới');\r\n");
      out.write("            $('#customerSelectGroup').hide();\r\n");
      out.write("            $('#customerId').val('');\r\n");
      out.write("            unlockCustomerFields();\r\n");
      out.write("        });\r\n");
      out.write("\r\n");
      out.write("        // Reset password form when modal is closed\r\n");
      out.write("        $('#changePasswordModal').on('hidden.bs.modal', function() {\r\n");
      out.write("            document.getElementById('changePasswordForm').reset();\r\n");
      out.write("            currentPasswordUserId = null;\r\n");
      out.write("        });\r\n");
      out.write("\r\n");
      out.write("    </script>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try { out.clearBuffer(); } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}

/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.47
 * Generated at: 2025-10-09 22:31:49 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class profile_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(1);
    _jspx_dependants.put("/header.jsp", Long.valueOf(1760035996038L));
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fchoose;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fnobody;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fotherwise;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fif_0026_005ftest;

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005fc_005fchoose = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fnobody = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fc_005fotherwise = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fc_005fif_0026_005ftest = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005fc_005fchoose.release();
    _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest.release();
    _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fnobody.release();
    _005fjspx_005ftagPool_005fc_005fotherwise.release();
    _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html lang=\"vi\">\r\n");
      out.write("  <head>\r\n");
      out.write("  <meta charset=\"UTF-8\">\r\n");
      out.write("  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n");
      out.write("  <title>Công ty CP Chế tạo máy Hoà Lạc - Chuyên cung cấp máy phát điện chính hãng</title>\r\n");
      out.write("  <link href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css\" rel=\"stylesheet\">\r\n");
      out.write("  <link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css\" rel=\"stylesheet\">\r\n");
      out.write("  <link href=\"https://fonts.googleapis.com/css2?family=Roboto:wght@300;400;500;700&display=swap\" rel=\"stylesheet\">\r\n");
      out.write("  <link rel=\"stylesheet\" href=\"css/styles.css\"/>\r\n");
      out.write("  <style>\r\n");
      out.write("    .account-wrapper { max-width: 1100px; margin: 30px auto; }\r\n");
      out.write("    .account-card { background: #fff; border-radius: 8px; box-shadow: 0 4px 16px rgba(0,0,0,.06); }\r\n");
      out.write("    .account-tabs { border-bottom: 1px solid #eee; display: flex; gap: 8px; padding: 12px; }\r\n");
      out.write("    .account-tab { padding: 10px 14px; border-radius: 6px; cursor: pointer; font-weight: 600; color: #495057; }\r\n");
      out.write("    .account-tab.active { background: #dc3545; color: #fff; }\r\n");
      out.write("    .account-content { padding: 20px; }\r\n");
      out.write("    .form-grid { display: grid; grid-template-columns: 1fr 1fr; gap: 16px; }\r\n");
      out.write("    .form-grid .field { display: flex; flex-direction: column; }\r\n");
      out.write("    .field label { font-weight: 600; margin-bottom: 6px; }\r\n");
      out.write("    .field input { padding: 10px 12px; border: 1px solid #dee2e6; border-radius: 6px; }\r\n");
      out.write("    .section-title { font-size: 16px; font-weight: 700; margin-bottom: 16px; }\r\n");
      out.write("    .product-list { border: 1px solid #eee; border-radius: 6px; }\r\n");
      out.write("    .product-list table { width: 100%; border-collapse: collapse; }\r\n");
      out.write("    .product-list th, .product-list td { padding: 10px 12px; border-bottom: 1px solid #f1f1f1; text-align: left; }\r\n");
      out.write("    .save-btn { background: #dc3545; color: #fff; border: none; padding: 10px 16px; border-radius: 6px; font-weight: 700; }\r\n");
      out.write("</style>\r\n");
      out.write("</head>\r\n");
      out.write("\r\n");
      out.write("<body>\r\n");
      out.write("  ");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<style>\r\n");
      out.write("    .top-header { background: #dc3545; color: #ffffff; padding: 8px 0; font-size: 14px; }\r\n");
      out.write("    .header-text { font-weight: 600; text-transform: uppercase; }\r\n");
      out.write("    .contact-info { margin-right: 20px; }\r\n");
      out.write("    .header-navbar { background: #ffffff; box-shadow: 0 2px 10px rgba(0,0,0,0.1); padding: 15px 0; }\r\n");
      out.write("    .menu-navbar { background: #eeeeee; border-top: 1px solid #e5e5e5; border-bottom: 1px solid #e5e5e5; padding: 8px 0; }\r\n");
      out.write("    .logo-container { display:flex; align-items:center; }\r\n");
      out.write("    .logo-icon { width:60px; height:60px; border-radius:50%; margin-right:15px; overflow:hidden; }\r\n");
      out.write("    .logo-icon img { width:100%; height:100%; object-fit:cover; }\r\n");
      out.write("    .logo-text { color:#343a40; font-size:16px; font-weight:600; line-height:1.2; }\r\n");
      out.write("    .search-container { position:relative; margin:0 20px; }\r\n");
      out.write("    .search-input { width:300px; padding:12px 45px 12px 15px; border:1px solid #dee2e6; border-radius:25px; font-size:14px; }\r\n");
      out.write("    .search-icon { position:absolute; right:15px; top:50%; transform:translateY(-50%); color:#6c757d; }\r\n");
      out.write("    .contact-info-nav { display:flex; align-items:center; gap:20px; }\r\n");
      out.write("    .phone-number { color:#dc3545; font-weight:600; font-size:16px; }\r\n");
      out.write("    .nav-icons { display:flex; gap:15px; }\r\n");
      out.write("    .nav-icons i { font-size:20px; color:#343a40; cursor:pointer; }\r\n");
      out.write("    .nav-icons a { color: inherit; text-decoration: none; transition: color 0.3s ease; }\r\n");
      out.write("    .nav-icons a:hover { color: #dc3545; }\r\n");
      out.write("    .navbar-nav .nav-link { color:#343a40 !important; font-weight:500; margin:0 8px; padding:8px 12px !important; text-transform:uppercase; font-size:14px; }\r\n");
      out.write("    .navbar-nav .nav-link:hover { color:#dc3545 !important; }\r\n");
      out.write("    .navbar-nav .nav-link.active { color:#dc3545 !important; font-weight:700; }\r\n");
      out.write("</style>\r\n");
      out.write("\r\n");
      out.write("<div class=\"top-header\" data-logged-in=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${sessionScope.isLoggedIn eq true}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write("\">\r\n");
      out.write("    <div class=\"container\">\r\n");
      out.write("        <div class=\"row align-items-center\">\r\n");
      out.write("            <div class=\"col-md-6\"><span class=\"header-text\">MÁY PHÁT ĐIỆN CÔNG NGHIỆP</span></div>\r\n");
      out.write("            <div class=\"col-md-6 text-end\">\r\n");
      out.write("                <span class=\"contact-info\"><i class=\"fas fa-envelope\"></i> Mayphatdienhoalac@gmail.com</span>\r\n");
      out.write("                <span class=\"contact-info\"><i class=\"fas fa-clock\"></i> 08:00 - 17:00</span>\r\n");
      out.write("            </div>\r\n");
      out.write("        </div>\r\n");
      out.write("    </div>\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("<nav class=\"navbar header-navbar navbar-expand-lg navbar-light bg-white\" aria-label=\"Thanh điều hướng logo, tìm kiếm và tài khoản\">\r\n");
      out.write("    <div class=\"container\">\r\n");
      out.write("        <a class=\"navbar-brand\" href=\"index.jsp\">\r\n");
      out.write("            <div class=\"logo-container\">\r\n");
      out.write("                <div class=\"logo-icon\">\r\n");
      out.write("                    <img src=\"images/logo.png\" alt=\"Logo Hoà Lạc\" onerror=\"this.style.display='none'; this.nextElementSibling.style.display='flex';\">\r\n");
      out.write("                    <div style=\"display:none; width:100%; height:100%; background:#dc3545; border-radius:50%; align-items:center; justify-content:center; color:white; font-size:20px;\">★</div>\r\n");
      out.write("                </div>\r\n");
      out.write("                <div class=\"logo-text\"><strong>HOÀ LẠC ELECTRIC INDUSTRIAL GENERATOR</strong></div>\r\n");
      out.write("            </div>\r\n");
      out.write("        </a>\r\n");
      out.write("        <div class=\"search-container\" role=\"search\">\r\n");
      out.write("            <input type=\"text\" class=\"search-input\" placeholder=\"Tìm kiếm...\">\r\n");
      out.write("            <i class=\"fas fa-search search-icon\"></i>\r\n");
      out.write("        </div>\r\n");
      out.write("        <div class=\"contact-info-nav\">\r\n");
      out.write("            <div class=\"phone-number\"><i class=\"fas fa-phone\"></i> 0989.888.999</div>\r\n");
      out.write("            <div class=\"nav-icons\">\r\n");
      out.write("                ");
      if (_jspx_meth_c_005fchoose_005f0(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("                <i class=\"fas fa-shopping-bag\"></i>\r\n");
      out.write("            </div>\r\n");
      out.write("        </div>\r\n");
      out.write("    </div>\r\n");
      out.write("</nav>\r\n");
      out.write("\r\n");
      out.write("<nav class=\"menu-navbar\" aria-label=\"Thanh menu chính\">\r\n");
      out.write("    <div class=\"container\">\r\n");
      out.write("        <ul class=\"navbar-nav flex-row justify-content-center w-100\">\r\n");
      out.write("            <li class=\"nav-item\"><a class=\"nav-link\" href=\"index.jsp\" id=\"nav-home\">TRANG CHỦ</a></li>\r\n");
      out.write("            <li class=\"nav-item\"><a class=\"nav-link\" href=\"about.jsp\" id=\"nav-about\">GIỚI THIỆU</a></li>\r\n");
      out.write("            <li class=\"nav-item\"><a class=\"nav-link\" href=\"#products\">MÁY PHÁT ĐIỆN</a></li>\r\n");
      out.write("            <li class=\"nav-item\"><a class=\"nav-link\" href=\"#services\">DỊCH VỤ</a></li>\r\n");
      out.write("            <li class=\"nav-item\"><a class=\"nav-link\" href=\"#projects\">DỰ ÁN</a></li>\r\n");
      out.write("            <li class=\"nav-item\"><a class=\"nav-link\" href=\"#guide\">HƯỚNG DẪN</a></li>\r\n");
      out.write("            <li class=\"nav-item\"><a class=\"nav-link\" href=\"#news\">TIN TỨC</a></li>\r\n");
      out.write("            <li class=\"nav-item\"><a class=\"nav-link\" href=\"#contact\">LIÊN HỆ</a></li>\r\n");
      out.write("            ");
      if (_jspx_meth_c_005fif_005f0(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("        </ul>\r\n");
      out.write("    </div>\r\n");
      out.write("</nav>\r\n");
      out.write("\r\n");
      out.write("<script>\r\n");
      out.write("// Auto-set active menu item based on current page\r\n");
      out.write("document.addEventListener('DOMContentLoaded', function() {\r\n");
      out.write("    const currentPage = window.location.pathname.split('/').pop();\r\n");
      out.write("    const navLinks = document.querySelectorAll('.navbar-nav .nav-link');\r\n");
      out.write("    \r\n");
      out.write("    navLinks.forEach(link => {\r\n");
      out.write("        link.classList.remove('active');\r\n");
      out.write("        const href = link.getAttribute('href');\r\n");
      out.write("        \r\n");
      out.write("        if (href === 'index.jsp' && (currentPage === 'index.jsp' || currentPage === '')) {\r\n");
      out.write("            link.classList.add('active');\r\n");
      out.write("        } else if (href === 'about.jsp' && currentPage === 'about.jsp') {\r\n");
      out.write("            link.classList.add('active');\r\n");
      out.write("        }\r\n");
      out.write("    });\r\n");
      out.write("});\r\n");
      out.write("\r\n");
      out.write("// Note: auto-logout on tab close was removed to avoid logging out on refresh\r\n");
      out.write("</script>");
      out.write("\r\n");
      out.write("<div class=\"account-wrapper\">\r\n");
      out.write("  <div class=\"account-card\">\r\n");
      out.write("    <div class=\"account-tabs\">\r\n");
      out.write("      <div class=\"account-tab active\" data-tab=\"info\">Thông tin người dùng</div>\r\n");
      out.write("      <div class=\"account-tab\" data-tab=\"products\">Sản phẩm sở hữu</div>\r\n");
      out.write("      <div class=\"account-tab\" data-tab=\"settings\">Đổi mật khẩu</div>\r\n");
      out.write("    </div>\r\n");
      out.write("    <div class=\"account-content\">\r\n");
      out.write("      <div class=\"tab-panel\" id=\"tab-info\">\r\n");
      out.write("        <div class=\"section-title\">Thông tin cơ bản</div>\r\n");
      out.write("        <form id=\"form-profile\" method=\"post\" action=\"#\">\r\n");
      out.write("          <div class=\"form-grid\">\r\n");
      out.write("            <div class=\"field\">\r\n");
      out.write("              <label for=\"fullName\">Họ và tên</label>\r\n");
      out.write("              <input id=\"fullName\" type=\"text\" name=\"fullName\" value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${sessionScope.fullName}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write("\" />\r\n");
      out.write("            </div>\r\n");
      out.write("            <div class=\"field\">\r\n");
      out.write("              <label for=\"address\">Địa chỉ</label>\r\n");
      out.write("              <input id=\"address\" type=\"text\" name=\"address\" value=\"\" />\r\n");
      out.write("            </div>\r\n");
      out.write("            <div class=\"field\">\r\n");
      out.write("              <label for=\"email\">Email</label>\r\n");
      out.write("              <input id=\"email\" type=\"email\" name=\"email\" value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${sessionScope.email}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write("\" />\r\n");
      out.write("            </div>\r\n");
      out.write("            <div class=\"field\">\r\n");
      out.write("              <label for=\"phone\">Số điện thoại</label>\r\n");
      out.write("              <input id=\"phone\" type=\"text\" name=\"phone\" value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${sessionScope.phone}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write("\" />\r\n");
      out.write("            </div>\r\n");
      out.write("            <div class=\"field\">\r\n");
      out.write("              <label for=\"companyName\">Công ty</label>\r\n");
      out.write("              <input id=\"companyName\" type=\"text\" name=\"companyName\" value=\"\" />\r\n");
      out.write("            </div>\r\n");
      out.write("            \r\n");
      out.write("          </div>\r\n");
      out.write("          <div style=\"margin-top:16px;\">\r\n");
      out.write("            <button class=\"save-btn\" type=\"button\" id=\"openUpdateModalBtn\">Cập nhật</button>\r\n");
      out.write("          </div>\r\n");
      out.write("        </form>\r\n");
      out.write("      </div>\r\n");
      out.write("\r\n");
      out.write("      <div class=\"tab-panel\" id=\"tab-products\" style=\"display:none;\">\r\n");
      out.write("        <div class=\"section-title\">Sản phẩm sở hữu</div>\r\n");
      out.write("        <div class=\"product-list\">\r\n");
      out.write("          <table>\r\n");
      out.write("            <thead>\r\n");
      out.write("              <tr>\r\n");
      out.write("                <th>Mã</th>\r\n");
      out.write("                <th>Tên sản phẩm</th>\r\n");
      out.write("                <th>Ngày kích hoạt</th>\r\n");
      out.write("                <th>Trạng thái</th>\r\n");
      out.write("              </tr>\r\n");
      out.write("            </thead>\r\n");
      out.write("            <tbody>\r\n");
      out.write("              <tr>\r\n");
      out.write("                <td colspan=\"4\">Chưa có dữ liệu sản phẩm. Sẽ hiển thị sau khi kết nối cơ sở dữ liệu.</td>\r\n");
      out.write("              </tr>\r\n");
      out.write("            </tbody>\r\n");
      out.write("          </table>\r\n");
      out.write("        </div>\r\n");
      out.write("      </div>\r\n");
      out.write("\r\n");
      out.write("      <div class=\"tab-panel\" id=\"tab-settings\" style=\"display:none;\">\r\n");
      out.write("        <div class=\"section-title\">Đổi mật khẩu</div>\r\n");
      out.write("        <div class=\"form-grid\">\r\n");
      out.write("          <div class=\"field\">\r\n");
      out.write("            <label for=\"currentPassword\">Mật khẩu hiện tại</label>\r\n");
      out.write("            <input id=\"currentPassword\" type=\"password\" placeholder=\"••••••••\" />\r\n");
      out.write("          </div>\r\n");
      out.write("          <div class=\"field\">\r\n");
      out.write("            <label for=\"newPassword\">Mật khẩu mới</label>\r\n");
      out.write("            <input id=\"newPassword\" type=\"password\" placeholder=\"Mật khẩu mới\" />\r\n");
      out.write("          </div>\r\n");
      out.write("          <div class=\"field\">\r\n");
      out.write("            <label for=\"confirmPassword\">Nhập lại mật khẩu mới</label>\r\n");
      out.write("            <input id=\"confirmPassword\" type=\"password\" placeholder=\"Nhập lại mật khẩu mới\" />\r\n");
      out.write("          </div>\r\n");
      out.write("        </div>\r\n");
      out.write("        <div style=\"margin-top:16px;\">\r\n");
      out.write("          <button class=\"save-btn\" type=\"button\" id=\"changePasswordBtn\">Đổi mật khẩu</button>\r\n");
      out.write("        </div>\r\n");
      out.write("      </div>\r\n");
      out.write("    </div>\r\n");
      out.write("  </div>\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "footer.jsp", out, false);
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!-- Modal cập nhật thông tin -->\r\n");
      out.write("<div class=\"modal fade\" id=\"updateUserModal\" tabindex=\"-1\" aria-labelledby=\"updateUserModalLabel\" aria-hidden=\"true\">\r\n");
      out.write("  <div class=\"modal-dialog\">\r\n");
      out.write("    <div class=\"modal-content\" style=\"border-radius: 12px;\">\r\n");
      out.write("      <div class=\"modal-header\">\r\n");
      out.write("        <h5 class=\"modal-title\" id=\"updateUserModalLabel\">Cập nhật thông tin tài khoản</h5>\r\n");
      out.write("        <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Đóng\"></button>\r\n");
      out.write("      </div>\r\n");
      out.write("      <div class=\"modal-body\">\r\n");
      out.write("        <form id=\"updateUserForm\">\r\n");
      out.write("          <div class=\"mb-3\">\r\n");
      out.write("            <label for=\"m_fullName\" class=\"form-label\">Họ và tên</label>\r\n");
      out.write("            <input type=\"text\" class=\"form-control\" id=\"m_fullName\" required>\r\n");
      out.write("          </div>\r\n");
      out.write("          <div class=\"mb-3\">\r\n");
      out.write("            <label for=\"m_email\" class=\"form-label\">Email</label>\r\n");
      out.write("            <input type=\"email\" class=\"form-control\" id=\"m_email\" required>\r\n");
      out.write("          </div>\r\n");
      out.write("          <div class=\"mb-3\">\r\n");
      out.write("            <label for=\"m_phone\" class=\"form-label\">Số điện thoại</label>\r\n");
      out.write("            <input type=\"text\" class=\"form-control\" id=\"m_phone\">\r\n");
      out.write("          </div>\r\n");
      out.write("          <div class=\"mb-3\">\r\n");
      out.write("            <label for=\"m_companyName\" class=\"form-label\">Công ty</label>\r\n");
      out.write("            <input type=\"text\" class=\"form-control\" id=\"m_companyName\">\r\n");
      out.write("          </div>\r\n");
      out.write("          <div class=\"mb-3\">\r\n");
      out.write("            <label for=\"m_address\" class=\"form-label\">Địa chỉ</label>\r\n");
      out.write("            <input type=\"text\" class=\"form-control\" id=\"m_address\">\r\n");
      out.write("          </div>\r\n");
      out.write("          <div class=\"mb-3\">\r\n");
      out.write("            <label class=\"form-label\">Tên đăng nhập</label>\r\n");
      out.write("            <input type=\"text\" class=\"form-control\" id=\"m_username\" disabled>\r\n");
      out.write("          </div>\r\n");
      out.write("        </form>\r\n");
      out.write("      </div>\r\n");
      out.write("      <div class=\"modal-footer\">\r\n");
      out.write("        <button type=\"button\" class=\"btn btn-secondary\" data-bs-dismiss=\"modal\">Hủy</button>\r\n");
      out.write("        <button type=\"button\" class=\"btn btn-danger\" id=\"confirmUpdateBtn\">Xác nhận</button>\r\n");
      out.write("      </div>\r\n");
      out.write("    </div>\r\n");
      out.write("  </div>\r\n");
      out.write(" </div>\r\n");
      out.write("\r\n");
      out.write("<script>\r\n");
      out.write("  (function(){\r\n");
      out.write("    var tabs = document.querySelectorAll('.account-tab');\r\n");
      out.write("    var panels = {\r\n");
      out.write("      info: document.getElementById('tab-info'),\r\n");
      out.write("      products: document.getElementById('tab-products'),\r\n");
      out.write("      settings: document.getElementById('tab-settings')\r\n");
      out.write("    };\r\n");
      out.write("    function activate(name){\r\n");
      out.write("      tabs.forEach(function(t){ t.classList.toggle('active', t.getAttribute('data-tab')===name); });\r\n");
      out.write("      Object.keys(panels).forEach(function(k){ panels[k].style.display = (k===name)?'block':'none'; });\r\n");
      out.write("    }\r\n");
      out.write("    tabs.forEach(function(t){ t.addEventListener('click', function(){ activate(t.getAttribute('data-tab')); }); });\r\n");
      out.write("\r\n");
      out.write("    // Load current user info from API\r\n");
      out.write("    var sessionUserId = '");
      out.print( String.valueOf(session.getAttribute("userId")) );
      out.write("';\r\n");
      out.write("    var userData = null;\r\n");
      out.write("    var customerData = null;\r\n");
      out.write("    function fillForm(data){\r\n");
      out.write("      try {\r\n");
      out.write("        document.getElementById('fullName').value = data.fullName || '';\r\n");
      out.write("        document.getElementById('email').value = data.email || '';\r\n");
      out.write("        if (document.getElementById('phone')) document.getElementById('phone').value = data.phone || '';\r\n");
      out.write("        if (document.getElementById('companyName')) document.getElementById('companyName').value = (data.companyName || '');\r\n");
      out.write("        if (document.getElementById('address')) document.getElementById('address').value = (data.address || '');\r\n");
      out.write("      } catch(e) {}\r\n");
      out.write("    }\r\n");
      out.write("    if (sessionUserId && sessionUserId !== 'null') {\r\n");
      out.write("      fetch('");
      out.print(request.getContextPath());
      out.write("/api/users?action=get&id=' + encodeURIComponent(sessionUserId), {headers:{'Accept':'application/json'}})\r\n");
      out.write("        .then(function(r){return r.json();})\r\n");
      out.write("        .then(function(j){ if (j && j.success && j.data){ userData = j.data; fillForm(userData); } })\r\n");
      out.write("        .catch(function(){});\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    // Try load customer info by email to fill company/address\r\n");
      out.write("    var sessionEmail = '");
      out.print( String.valueOf(session.getAttribute("email")) );
      out.write("';\r\n");
      out.write("    if (sessionEmail && sessionEmail !== 'null') {\r\n");
      out.write("      fetch('");
      out.print(request.getContextPath());
      out.write("/api/customers?action=search&search=' + encodeURIComponent(sessionEmail), {headers:{'Accept':'application/json'}})\r\n");
      out.write("        .then(function(r){return r.json();})\r\n");
      out.write("        .then(function(j){\r\n");
      out.write("          if (j && j.success && Array.isArray(j.data) && j.data.length) {\r\n");
      out.write("            // pick the first matching customer\r\n");
      out.write("            customerData = j.data[0];\r\n");
      out.write("            if (document.getElementById('companyName')) document.getElementById('companyName').value = customerData.companyName || '';\r\n");
      out.write("            if (document.getElementById('address')) document.getElementById('address').value = customerData.address || '';\r\n");
      out.write("          }\r\n");
      out.write("        })\r\n");
      out.write("        .catch(function(){});\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    // Open modal and prefill\r\n");
      out.write("    var openBtn = document.getElementById('openUpdateModalBtn');\r\n");
      out.write("    if (openBtn) {\r\n");
      out.write("      openBtn.addEventListener('click', function(){\r\n");
      out.write("        if (!userData) {\r\n");
      out.write("          userData = {\r\n");
      out.write("            id: sessionUserId,\r\n");
      out.write("            username: '");
      out.print( String.valueOf(session.getAttribute("username")) );
      out.write("',\r\n");
      out.write("            email: document.getElementById('email').value,\r\n");
      out.write("            fullName: document.getElementById('fullName').value,\r\n");
      out.write("            phone: document.getElementById('phone').value,\r\n");
      out.write("            companyName: document.getElementById('companyName') ? document.getElementById('companyName').value : '',\r\n");
      out.write("            address: document.getElementById('address') ? document.getElementById('address').value : '',\r\n");
      out.write("            role: '");
      out.print( String.valueOf(session.getAttribute("userRole")) );
      out.write("'\r\n");
      out.write("          };\r\n");
      out.write("        }\r\n");
      out.write("        document.getElementById('m_fullName').value = userData.fullName || '';\r\n");
      out.write("        document.getElementById('m_email').value = userData.email || '';\r\n");
      out.write("        document.getElementById('m_phone').value = userData.phone || '';\r\n");
      out.write("        document.getElementById('m_companyName').value = userData.companyName || '';\r\n");
      out.write("        document.getElementById('m_address').value = userData.address || '';\r\n");
      out.write("        document.getElementById('m_username').value = userData.username || '';\r\n");
      out.write("        var modal = bootstrap.Modal.getOrCreateInstance(document.getElementById('updateUserModal'));\r\n");
      out.write("        modal.show();\r\n");
      out.write("      });\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    // Confirm update\r\n");
      out.write("    var confirmBtn = document.getElementById('confirmUpdateBtn');\r\n");
      out.write("    if (confirmBtn) {\r\n");
      out.write("      confirmBtn.addEventListener('click', function(){\r\n");
      out.write("        var fullName = document.getElementById('m_fullName').value.trim();\r\n");
      out.write("        var email = document.getElementById('m_email').value.trim();\r\n");
      out.write("        var phone = document.getElementById('m_phone').value.trim();\r\n");
      out.write("        var companyName = document.getElementById('m_companyName').value.trim();\r\n");
      out.write("        var address = document.getElementById('m_address').value.trim();\r\n");
      out.write("        if (!userData) return;\r\n");
      out.write("        var data = new URLSearchParams();\r\n");
      out.write("        data.append('id', userData.id);\r\n");
      out.write("        data.append('username', userData.username || '');\r\n");
      out.write("        data.append('email', email);\r\n");
      out.write("        data.append('fullName', fullName);\r\n");
      out.write("        data.append('phone', phone);\r\n");
      out.write("        data.append('companyName', companyName);\r\n");
      out.write("        data.append('address', address);\r\n");
      out.write("        data.append('role', userData.role || 'customer');\r\n");
      out.write("        if (userData.permissions != null) data.append('permissions', String(userData.permissions));\r\n");
      out.write("        if (typeof userData.isActive !== 'undefined') data.append('isActive', String(!!userData.isActive));\r\n");
      out.write("        fetch('");
      out.print(request.getContextPath());
      out.write("/api/users?action=update', {\r\n");
      out.write("          method: 'POST',\r\n");
      out.write("          headers: { 'Content-Type': 'application/x-www-form-urlencoded', 'Accept': 'application/json' },\r\n");
      out.write("          body: data.toString()\r\n");
      out.write("        }).then(function(r){ return r.json(); })\r\n");
      out.write("          .then(function(j){\r\n");
      out.write("            if (j && j.success){\r\n");
      out.write("              // update UI\r\n");
      out.write("              document.getElementById('fullName').value = fullName;\r\n");
      out.write("              document.getElementById('email').value = email;\r\n");
      out.write("              if (document.getElementById('phone')) document.getElementById('phone').value = phone;\r\n");
      out.write("              if (document.getElementById('companyName')) document.getElementById('companyName').value = companyName;\r\n");
      out.write("              if (document.getElementById('address')) document.getElementById('address').value = address;\r\n");
      out.write("              if (userData){ userData.fullName = fullName; userData.email = email; userData.phone = phone; }\r\n");
      out.write("              var m = bootstrap.Modal.getInstance(document.getElementById('updateUserModal'));\r\n");
      out.write("              if (m) m.hide();\r\n");
      out.write("              // Additionally update customer info if we have it\r\n");
      out.write("              if (customerData && customerData.id) {\r\n");
      out.write("                var cdata = new URLSearchParams();\r\n");
      out.write("                cdata.append('id', customerData.id);\r\n");
      out.write("                cdata.append('customerCode', customerData.customerCode || '');\r\n");
      out.write("                cdata.append('companyName', companyName || customerData.companyName || '');\r\n");
      out.write("                cdata.append('userContract', customerData.contactPerson || (fullName || ''));\r\n");
      out.write("                cdata.append('customerEmail', email || customerData.email || '');\r\n");
      out.write("                cdata.append('customerPhone', phone || customerData.phone || '');\r\n");
      out.write("                cdata.append('customerAddress', address || customerData.address || '');\r\n");
      out.write("                cdata.append('taxCode', customerData.taxCode || '');\r\n");
      out.write("                cdata.append('customerType', customerData.customerType || 'individual');\r\n");
      out.write("                fetch('");
      out.print(request.getContextPath());
      out.write("/api/customers?action=update', {\r\n");
      out.write("                  method: 'POST',\r\n");
      out.write("                  headers: { 'Content-Type': 'application/x-www-form-urlencoded', 'Accept': 'application/json' },\r\n");
      out.write("                  body: cdata.toString()\r\n");
      out.write("                }).then(function(rr){ return rr.json(); }).then(function(){\r\n");
      out.write("                  alert('Cập nhật thành công');\r\n");
      out.write("                }).catch(function(){ alert('Cập nhật tài khoản thành công, nhưng cập nhật khách hàng thất bại'); });\r\n");
      out.write("              } else {\r\n");
      out.write("                alert('Cập nhật thành công');\r\n");
      out.write("              }\r\n");
      out.write("            } else {\r\n");
      out.write("              alert((j && j.message) ? j.message : 'Không thể cập nhật');\r\n");
      out.write("            }\r\n");
      out.write("          })\r\n");
      out.write("          .catch(function(){ alert('Lỗi kết nối máy chủ'); });\r\n");
      out.write("      });\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    // Change password functionality\r\n");
      out.write("    var changePasswordBtn = document.getElementById('changePasswordBtn');\r\n");
      out.write("    if (changePasswordBtn) {\r\n");
      out.write("      changePasswordBtn.addEventListener('click', function() {\r\n");
      out.write("        var currentPassword = document.getElementById('currentPassword').value.trim();\r\n");
      out.write("        var newPassword = document.getElementById('newPassword').value.trim();\r\n");
      out.write("        var confirmPassword = document.getElementById('confirmPassword').value.trim();\r\n");
      out.write("        \r\n");
      out.write("        // Validate\r\n");
      out.write("        if (!currentPassword || !newPassword || !confirmPassword) {\r\n");
      out.write("          alert('Vui lòng nhập đầy đủ thông tin!');\r\n");
      out.write("          return;\r\n");
      out.write("        }\r\n");
      out.write("        \r\n");
      out.write("        if (newPassword !== confirmPassword) {\r\n");
      out.write("          alert('Mật khẩu mới và xác nhận mật khẩu không khớp!');\r\n");
      out.write("          return;\r\n");
      out.write("        }\r\n");
      out.write("        \r\n");
      out.write("        if (newPassword.length < 6) {\r\n");
      out.write("          alert('Mật khẩu mới phải có ít nhất 6 ký tự!');\r\n");
      out.write("          return;\r\n");
      out.write("        }\r\n");
      out.write("        \r\n");
      out.write("        // Confirm action\r\n");
      out.write("        if (!confirm('Bạn có chắc chắn muốn đổi mật khẩu?')) {\r\n");
      out.write("          return;\r\n");
      out.write("        }\r\n");
      out.write("        \r\n");
      out.write("        // Send request\r\n");
      out.write("        var data = new URLSearchParams();\r\n");
      out.write("        data.append('currentPassword', currentPassword);\r\n");
      out.write("        data.append('newPassword', newPassword);\r\n");
      out.write("        data.append('confirmPassword', confirmPassword);\r\n");
      out.write("        \r\n");
      out.write("        fetch('");
      out.print(request.getContextPath());
      out.write("/api/changePassword', {\r\n");
      out.write("          method: 'POST',\r\n");
      out.write("          headers: { 'Content-Type': 'application/x-www-form-urlencoded', 'Accept': 'application/json' },\r\n");
      out.write("          body: data.toString()\r\n");
      out.write("        })\r\n");
      out.write("        .then(function(r) { return r.json(); })\r\n");
      out.write("        .then(function(j) {\r\n");
      out.write("          if (j && j.success) {\r\n");
      out.write("            alert('Đổi mật khẩu thành công! Vui lòng đăng nhập lại.');\r\n");
      out.write("            // Clear inputs\r\n");
      out.write("            document.getElementById('currentPassword').value = '';\r\n");
      out.write("            document.getElementById('newPassword').value = '';\r\n");
      out.write("            document.getElementById('confirmPassword').value = '';\r\n");
      out.write("            // Optionally redirect to login\r\n");
      out.write("            setTimeout(function() {\r\n");
      out.write("              window.location.href = '");
      out.print(request.getContextPath());
      out.write("/logout';\r\n");
      out.write("            }, 1500);\r\n");
      out.write("          } else {\r\n");
      out.write("            alert(j.message || 'Không thể đổi mật khẩu!');\r\n");
      out.write("          }\r\n");
      out.write("        })\r\n");
      out.write("        .catch(function(err) {\r\n");
      out.write("          alert('Lỗi kết nối máy chủ!');\r\n");
      out.write("          console.error(err);\r\n");
      out.write("        });\r\n");
      out.write("      });\r\n");
      out.write("    }\r\n");
      out.write("  })();\r\n");
      out.write("</script>\r\n");
      out.write("<script src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js\"></script>\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
      out.write("\r\n");
      out.write("\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try { out.clearBuffer(); } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_c_005fchoose_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:choose
    org.apache.taglibs.standard.tag.common.core.ChooseTag _jspx_th_c_005fchoose_005f0 = (org.apache.taglibs.standard.tag.common.core.ChooseTag) _005fjspx_005ftagPool_005fc_005fchoose.get(org.apache.taglibs.standard.tag.common.core.ChooseTag.class);
    _jspx_th_c_005fchoose_005f0.setPageContext(_jspx_page_context);
    _jspx_th_c_005fchoose_005f0.setParent(null);
    int _jspx_eval_c_005fchoose_005f0 = _jspx_th_c_005fchoose_005f0.doStartTag();
    if (_jspx_eval_c_005fchoose_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
      do {
        out.write("\r\n");
        out.write("                    ");
        if (_jspx_meth_c_005fwhen_005f0(_jspx_th_c_005fchoose_005f0, _jspx_page_context))
          return true;
        out.write("\r\n");
        out.write("                    ");
        if (_jspx_meth_c_005fotherwise_005f0(_jspx_th_c_005fchoose_005f0, _jspx_page_context))
          return true;
        out.write("\r\n");
        out.write("                ");
        int evalDoAfterBody = _jspx_th_c_005fchoose_005f0.doAfterBody();
        if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
          break;
      } while (true);
    }
    if (_jspx_th_c_005fchoose_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
      _005fjspx_005ftagPool_005fc_005fchoose.reuse(_jspx_th_c_005fchoose_005f0);
      return true;
    }
    _005fjspx_005ftagPool_005fc_005fchoose.reuse(_jspx_th_c_005fchoose_005f0);
    return false;
  }

  private boolean _jspx_meth_c_005fwhen_005f0(javax.servlet.jsp.tagext.JspTag _jspx_th_c_005fchoose_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:when
    org.apache.taglibs.standard.tag.rt.core.WhenTag _jspx_th_c_005fwhen_005f0 = (org.apache.taglibs.standard.tag.rt.core.WhenTag) _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.WhenTag.class);
    _jspx_th_c_005fwhen_005f0.setPageContext(_jspx_page_context);
    _jspx_th_c_005fwhen_005f0.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fchoose_005f0);
    // /header.jsp(59,20) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_c_005fwhen_005f0.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${sessionScope.isLoggedIn eq true}", java.lang.Boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false)).booleanValue());
    int _jspx_eval_c_005fwhen_005f0 = _jspx_th_c_005fwhen_005f0.doStartTag();
    if (_jspx_eval_c_005fwhen_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
      do {
        out.write("\r\n");
        out.write("                        <a href=\"profile.jsp\" class=\"user-info\" style=\"color: #dc3545; font-weight: 600; margin-right: 15px; text-decoration:none;\">\r\n");
        out.write("                            <i class=\"fas fa-user\"></i>\r\n");
        out.write("                            ");
        if (_jspx_meth_c_005fout_005f0(_jspx_th_c_005fwhen_005f0, _jspx_page_context))
          return true;
        out.write("\r\n");
        out.write("                        </a>\r\n");
        out.write("                        <a href=\"logout\" style=\"color: inherit; text-decoration: none;\" title=\"Đăng xuất\">\r\n");
        out.write("                            <i class=\"fas fa-sign-out-alt\"></i>\r\n");
        out.write("                        </a>\r\n");
        out.write("                    ");
        int evalDoAfterBody = _jspx_th_c_005fwhen_005f0.doAfterBody();
        if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
          break;
      } while (true);
    }
    if (_jspx_th_c_005fwhen_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
      _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest.reuse(_jspx_th_c_005fwhen_005f0);
      return true;
    }
    _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest.reuse(_jspx_th_c_005fwhen_005f0);
    return false;
  }

  private boolean _jspx_meth_c_005fout_005f0(javax.servlet.jsp.tagext.JspTag _jspx_th_c_005fwhen_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:out
    org.apache.taglibs.standard.tag.rt.core.OutTag _jspx_th_c_005fout_005f0 = (org.apache.taglibs.standard.tag.rt.core.OutTag) _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.OutTag.class);
    _jspx_th_c_005fout_005f0.setPageContext(_jspx_page_context);
    _jspx_th_c_005fout_005f0.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fwhen_005f0);
    // /header.jsp(62,28) name = value type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_c_005fout_005f0.setValue((java.lang.Object) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${empty sessionScope.fullName ? sessionScope.username : sessionScope.fullName}", java.lang.Object.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
    int _jspx_eval_c_005fout_005f0 = _jspx_th_c_005fout_005f0.doStartTag();
    if (_jspx_th_c_005fout_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
      _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fnobody.reuse(_jspx_th_c_005fout_005f0);
      return true;
    }
    _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fnobody.reuse(_jspx_th_c_005fout_005f0);
    return false;
  }

  private boolean _jspx_meth_c_005fotherwise_005f0(javax.servlet.jsp.tagext.JspTag _jspx_th_c_005fchoose_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:otherwise
    org.apache.taglibs.standard.tag.common.core.OtherwiseTag _jspx_th_c_005fotherwise_005f0 = (org.apache.taglibs.standard.tag.common.core.OtherwiseTag) _005fjspx_005ftagPool_005fc_005fotherwise.get(org.apache.taglibs.standard.tag.common.core.OtherwiseTag.class);
    _jspx_th_c_005fotherwise_005f0.setPageContext(_jspx_page_context);
    _jspx_th_c_005fotherwise_005f0.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fchoose_005f0);
    int _jspx_eval_c_005fotherwise_005f0 = _jspx_th_c_005fotherwise_005f0.doStartTag();
    if (_jspx_eval_c_005fotherwise_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
      do {
        out.write("\r\n");
        out.write("                        <a href=\"login.jsp\" style=\"color: inherit; text-decoration: none;\" title=\"Đăng nhập\">\r\n");
        out.write("                            <i class=\"fas fa-user\"></i>\r\n");
        out.write("                        </a>\r\n");
        out.write("                    ");
        int evalDoAfterBody = _jspx_th_c_005fotherwise_005f0.doAfterBody();
        if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
          break;
      } while (true);
    }
    if (_jspx_th_c_005fotherwise_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
      _005fjspx_005ftagPool_005fc_005fotherwise.reuse(_jspx_th_c_005fotherwise_005f0);
      return true;
    }
    _005fjspx_005ftagPool_005fc_005fotherwise.reuse(_jspx_th_c_005fotherwise_005f0);
    return false;
  }

  private boolean _jspx_meth_c_005fif_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:if
    org.apache.taglibs.standard.tag.rt.core.IfTag _jspx_th_c_005fif_005f0 = (org.apache.taglibs.standard.tag.rt.core.IfTag) _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.IfTag.class);
    _jspx_th_c_005fif_005f0.setPageContext(_jspx_page_context);
    _jspx_th_c_005fif_005f0.setParent(null);
    // /header.jsp(91,12) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_c_005fif_005f0.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${sessionScope.isLoggedIn eq true and sessionScope.userRole eq 'customer'}", java.lang.Boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false)).booleanValue());
    int _jspx_eval_c_005fif_005f0 = _jspx_th_c_005fif_005f0.doStartTag();
    if (_jspx_eval_c_005fif_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
      do {
        out.write("\r\n");
        out.write("                <li class=\"nav-item\"><a class=\"nav-link\" href=\"support.jsp\" id=\"nav-support\">HỖ TRỢ</a></li>\r\n");
        out.write("            ");
        int evalDoAfterBody = _jspx_th_c_005fif_005f0.doAfterBody();
        if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
          break;
      } while (true);
    }
    if (_jspx_th_c_005fif_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
      _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.reuse(_jspx_th_c_005fif_005f0);
      return true;
    }
    _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.reuse(_jspx_th_c_005fif_005f0);
    return false;
  }
}
